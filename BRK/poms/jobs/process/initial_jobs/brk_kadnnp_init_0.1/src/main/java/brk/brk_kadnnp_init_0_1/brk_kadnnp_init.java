// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package brk.brk_kadnnp_init_0_1;

import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.Relational;
import routines.Mathematical;
import routines.Numeric;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.TalendDate;
import routines.Settings;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: brk_kadnnp_init Purpose: <br>
 * Description:  <br>
 * @author user@talend.com
 * @version 7.2.1.20190620_1446
 * @status 
 */
public class brk_kadnnp_init implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(xmlLocation != null){
				
					this.setProperty("xmlLocation", xmlLocation.toString());
				
			}
			
			if(xmlType != null){
				
					this.setProperty("xmlType", xmlType.toString());
				
			}
			
			if(jobName != null){
				
					this.setProperty("jobName", jobName.toString());
				
			}
			
			if(result != null){
				
					this.setProperty("result", result.toString());
				
			}
			
		}

public String xmlLocation;
public String getXmlLocation(){
	return this.xmlLocation;
}
public String xmlType;
public String getXmlType(){
	return this.xmlType;
}
public String jobName;
public String getJobName(){
	return this.jobName;
}
public Boolean result;
public Boolean getResult(){
	return this.result;
}
	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "brk_kadnnp_init";
	private final String projectName = "BRK";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				brk_kadnnp_init.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(brk_kadnnp_init.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tWarn_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tWarn_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostgresPlusConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostgresPlusConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostgresPlusOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRunJob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostgresPlusRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostgresPlusRow_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tXMLMap_3_TXMLMAP_OUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tXMLMap_3_TXMLMAP_IN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tXMLMap_3_TXMLMAP_IN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tWarn_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostgresPlusConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRunJob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostgresPlusRow_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	





public void tWarn_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tWarn_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tWarn_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tWarn_1", false);
		start_Hash.put("tWarn_1", System.currentTimeMillis());
		
	
	currentComponent="tWarn_1";

	
		int tos_count_tWarn_1 = 0;
		

 



/**
 * [tWarn_1 begin ] stop
 */
	
	/**
	 * [tWarn_1 main ] start
	 */

	

	
	
	currentComponent="tWarn_1";

	

		
try {
	
	resumeUtil.addLog("USER_DEF_LOG", "NODE:tWarn_1", "", Thread.currentThread().getId() + "", "INFO","","Begonnen met kadnnp (7/23)","", "");
	tLogCatcher_1.addMessage("tWarn", "tWarn_1", 3, "Begonnen met kadnnp (7/23)", 42);
	tLogCatcher_1Process(globalMap);
	globalMap.put("tWarn_1_WARN_MESSAGES", "Begonnen met kadnnp (7/23)"); 
	globalMap.put("tWarn_1_WARN_PRIORITY", 3);
	globalMap.put("tWarn_1_WARN_CODE", 42);
	
} catch (Exception e_tWarn_1) {
	logIgnoredError(String.format("tWarn_1 - tWarn failed to log message due to internal error: %s", e_tWarn_1), e_tWarn_1);
}


 


	tos_count_tWarn_1++;

/**
 * [tWarn_1 main ] stop
 */
	
	/**
	 * [tWarn_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tWarn_1";

	

 



/**
 * [tWarn_1 process_data_begin ] stop
 */
	
	/**
	 * [tWarn_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tWarn_1";

	

 



/**
 * [tWarn_1 process_data_end ] stop
 */
	
	/**
	 * [tWarn_1 end ] start
	 */

	

	
	
	currentComponent="tWarn_1";

	

 

ok_Hash.put("tWarn_1", true);
end_Hash.put("tWarn_1", System.currentTimeMillis());




/**
 * [tWarn_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tWarn_1 finally ] start
	 */

	

	
	
	currentComponent="tWarn_1";

	

 



/**
 * [tWarn_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tWarn_1_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_BRK_brk_kadnnp_init = new byte[0];
    static byte[] commonByteArray_BRK_brk_kadnnp_init = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_BRK_brk_kadnnp_init.length) {
				if(length < 1024 && commonByteArray_BRK_brk_kadnnp_init.length == 0) {
   					commonByteArray_BRK_brk_kadnnp_init = new byte[1024];
				} else {
   					commonByteArray_BRK_brk_kadnnp_init = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_BRK_brk_kadnnp_init, 0, length);
			strReturn = new String(commonByteArray_BRK_brk_kadnnp_init, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_BRK_brk_kadnnp_init) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",message="+message);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_BRK_brk_kadnnp_init = new byte[0];
    static byte[] commonByteArray_BRK_brk_kadnnp_init = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}
				
			    public String pid;

				public String getPid () {
					return this.pid;
				}
				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}
				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}
				
			    public String project;

				public String getProject () {
					return this.project;
				}
				
			    public String job;

				public String getJob () {
					return this.job;
				}
				
			    public String context;

				public String getContext () {
					return this.context;
				}
				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}
				
			    public String type;

				public String getType () {
					return this.type;
				}
				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}
				
			    public String message;

				public String getMessage () {
					return this.message;
				}
				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}
				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_BRK_brk_kadnnp_init.length) {
				if(length < 1024 && commonByteArray_BRK_brk_kadnnp_init.length == 0) {
   					commonByteArray_BRK_brk_kadnnp_init = new byte[1024];
				} else {
   					commonByteArray_BRK_brk_kadnnp_init = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_BRK_brk_kadnnp_init, 0, length);
			strReturn = new String(commonByteArray_BRK_brk_kadnnp_init, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_BRK_brk_kadnnp_init) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
row3Struct row3 = new row3Struct();





	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";

	
			if (execStat) {
				if(resourceMap.get("inIterateVComp") == null){
					
						
						if(execStat) {
							runStat.updateStatOnConnection("row3"+iterateId, 0, 0);
						}
						
						
						
					
				}
			} 

		
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
	
		final String OUTPUT_FIELD_SEPARATOR_tLogRow_1 = " - ";
		java.io.PrintStream consoleOut_tLogRow_1 = null;	

 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";

	
			if (execStat) {
				if(resourceMap.get("inIterateVComp") == null){
					
						
						if(execStat) {
							runStat.updateStatOnConnection("row2"+iterateId, 0, 0);
						}
						
						
						
					
				}
			} 

		
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
row3Struct row3_tmp = new row3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";

	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row2.type = lcm.getType();
		row2.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row2.priority = lcm.getPriority();
		row2.message = lcm.getMessage();
		row2.code = lcm.getCode();
		
		row2.moment = java.util.Calendar.getInstance().getTime();
	
    	row2.pid = pid;
		row2.root_pid = rootPid;
		row2.father_pid = fatherPid;
	
    	row2.project = projectName;
    	row2.job = jobName;
    	row2.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

			//row2
			//row2


			
				
				if(execStat){
					runStat.updateStatOnConnection("row2"+iterateId,1, 1);
				}
				
				
				
			

		

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_1 = false;
		  boolean mainRowRejected_tMap_1 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

row3 = null;


// # Output table : 'row3'
row3_tmp.moment = row2.moment;
row3_tmp.message = row2.message;
row3 = row3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

			//row3
			//row3


			
				
				if(execStat){
					runStat.updateStatOnConnection("row3"+iterateId,1, 1);
				}
				
				
				
			

		
///////////////////////		
						



				strBuffer_tLogRow_1 = new StringBuilder();




   				
	    		if(row3.moment != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
								FormatterUtils.format_Date(row3.moment, "HH:mm:ss dd-MM-yyyy")				
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append(" - ");
    			


   				
	    		if(row3.message != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row3.message)							
				);


							
	    		} //  			
 

                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    consoleOut_tLogRow_1.println(strBuffer_tLogRow_1.toString());
                    consoleOut_tLogRow_1.flush();
                    nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */

} // End of branch "row3"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	
	}
} catch (Exception e_tLogCatcher_1) {
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





			
			if(execStat){
				if(resourceMap.get("inIterateVComp") == null || !((Boolean)resourceMap.get("inIterateVComp"))){
	 				runStat.updateStatOnConnection("row2"+iterateId,2, 0);
			 	}
			}
			
			
			
		
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	


//////
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

			
			if(execStat){
				if(resourceMap.get("inIterateVComp") == null || !((Boolean)resourceMap.get("inIterateVComp"))){
	 				runStat.updateStatOnConnection("row3"+iterateId,2, 0);
			 	}
			}
			
			
			
		
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";

	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";

	

 



/**
 * [tLogRow_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	

public void tPostgresPlusConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostgresPlusConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostgresPlusConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostgresPlusConnection_1", false);
		start_Hash.put("tPostgresPlusConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tPostgresPlusConnection_1";

	
		int tos_count_tPostgresPlusConnection_1 = 0;
		


	
            String dbProperties_tPostgresPlusConnection_1 = "";
            String url_tPostgresPlusConnection_1 = "jdbc:postgresql://"+Settings.get("CONNECTION_DEFINITION", "host")+":"+Settings.get("CONNECTION_DEFINITION", "port")+"/"+Settings.get("CONNECTION_DEFINITION", "database");

            if(dbProperties_tPostgresPlusConnection_1 != null && !"".equals(dbProperties_tPostgresPlusConnection_1.trim())) {
                url_tPostgresPlusConnection_1 = url_tPostgresPlusConnection_1 + "?" + dbProperties_tPostgresPlusConnection_1;
            }
		String dbUser_tPostgresPlusConnection_1 = Settings.get("CONNECTION_DEFINITION", "user");
		
		
			
	final String decryptedPassword_tPostgresPlusConnection_1 = Settings.get("CONNECTION_DEFINITION", "password"); 
			String dbPwd_tPostgresPlusConnection_1 = decryptedPassword_tPostgresPlusConnection_1;
		
	java.sql.Connection conn_tPostgresPlusConnection_1 = null;
	
	
			String sharedConnectionName_tPostgresPlusConnection_1 = "postgres";
			conn_tPostgresPlusConnection_1 = SharedDBConnection.getDBConnection("org.postgresql.Driver",url_tPostgresPlusConnection_1,dbUser_tPostgresPlusConnection_1 , dbPwd_tPostgresPlusConnection_1 , sharedConnectionName_tPostgresPlusConnection_1);
	if (null != conn_tPostgresPlusConnection_1) {
		
			conn_tPostgresPlusConnection_1.setAutoCommit(false);
	}

	globalMap.put("schema_" + "tPostgresPlusConnection_1",Settings.get("SCHEMA_NAME_LOOKUP", "ldf"));

	globalMap.put("conn_" + "tPostgresPlusConnection_1",conn_tPostgresPlusConnection_1);

 



/**
 * [tPostgresPlusConnection_1 begin ] stop
 */
	
	/**
	 * [tPostgresPlusConnection_1 main ] start
	 */

	

	
	
	currentComponent="tPostgresPlusConnection_1";

	

 


	tos_count_tPostgresPlusConnection_1++;

/**
 * [tPostgresPlusConnection_1 main ] stop
 */
	
	/**
	 * [tPostgresPlusConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostgresPlusConnection_1";

	

 



/**
 * [tPostgresPlusConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostgresPlusConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostgresPlusConnection_1";

	

 



/**
 * [tPostgresPlusConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tPostgresPlusConnection_1 end ] start
	 */

	

	
	
	currentComponent="tPostgresPlusConnection_1";

	

 

ok_Hash.put("tPostgresPlusConnection_1", true);
end_Hash.put("tPostgresPlusConnection_1", System.currentTimeMillis());




/**
 * [tPostgresPlusConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tPostgresPlusConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tFileInputXML_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostgresPlusConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tPostgresPlusConnection_1";

	

 



/**
 * [tPostgresPlusConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostgresPlusConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_BRK_brk_kadnnp_init = new byte[0];
    static byte[] commonByteArray_BRK_brk_kadnnp_init = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String kdoreferentie;

				public String getKdoreferentie () {
					return this.kdoreferentie;
				}
				
			    public String toestandsdatum;

				public String getToestandsdatum () {
					return this.toestandsdatum;
				}
				
			    public String kadnnpid;

				public String getKadnnpid () {
					return this.kadnnpid;
				}
				
			    public String kadnnpidnamespace;

				public String getKadnnpidnamespace () {
					return this.kadnnpidnamespace;
				}
				
			    public String kadnnpidlokaalid;

				public String getKadnnpidlokaalid () {
					return this.kadnnpidlokaalid;
				}
				
			    public String kadnnpidversie;

				public String getKadnnpidversie () {
					return this.kadnnpidversie;
				}
				
			    public String kadnnpbeschikkingbevoegdheidcode;

				public String getKadnnpbeschikkingbevoegdheidcode () {
					return this.kadnnpbeschikkingbevoegdheidcode;
				}
				
			    public String kadnnpbeschikkingbevoegdheidwaarde;

				public String getKadnnpbeschikkingbevoegdheidwaarde () {
					return this.kadnnpbeschikkingbevoegdheidwaarde;
				}
				
			    public String kadnnppostlocatiekadbinadresopenbareruimtenaam;

				public String getKadnnppostlocatiekadbinadresopenbareruimtenaam () {
					return this.kadnnppostlocatiekadbinadresopenbareruimtenaam;
				}
				
			    public String kadnnppostlocatiekadbinadreshuisletter;

				public String getKadnnppostlocatiekadbinadreshuisletter () {
					return this.kadnnppostlocatiekadbinadreshuisletter;
				}
				
			    public String kadnnppostlocatiekadbinadreshuisnummer;

				public String getKadnnppostlocatiekadbinadreshuisnummer () {
					return this.kadnnppostlocatiekadbinadreshuisnummer;
				}
				
			    public String kadnnppostlocatiekadbinadreshuisnumtoevoeg;

				public String getKadnnppostlocatiekadbinadreshuisnumtoevoeg () {
					return this.kadnnppostlocatiekadbinadreshuisnumtoevoeg;
				}
				
			    public String kadnnppostlocatiekadbinadrespostcode;

				public String getKadnnppostlocatiekadbinadrespostcode () {
					return this.kadnnppostlocatiekadbinadrespostcode;
				}
				
			    public String kadnnppostlocatiekadbinadreswoonplaatsnaam;

				public String getKadnnppostlocatiekadbinadreswoonplaatsnaam () {
					return this.kadnnppostlocatiekadbinadreswoonplaatsnaam;
				}
				
			    public String kadnnppostlocatievbobagidentificatie;

				public String getKadnnppostlocatievbobagidentificatie () {
					return this.kadnnppostlocatievbobagidentificatie;
				}
				
			    public String kadnnppostlocatievbohoofdadrnumaandhuisnummer;

				public String getKadnnppostlocatievbohoofdadrnumaandhuisnummer () {
					return this.kadnnppostlocatievbohoofdadrnumaandhuisnummer;
				}
				
			    public String kadnnppostlocatievbohoofdadrnumaandhuisletter;

				public String getKadnnppostlocatievbohoofdadrnumaandhuisletter () {
					return this.kadnnppostlocatievbohoofdadrnumaandhuisletter;
				}
				
			    public String kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg;

				public String getKadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg () {
					return this.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg;
				}
				
			    public String kadnnppostlocatievbohoofdadrnumaandpostcode;

				public String getKadnnppostlocatievbohoofdadrnumaandpostcode () {
					return this.kadnnppostlocatievbohoofdadrnumaandpostcode;
				}
				
			    public String kadnnppostlocatievbohoofdadrnumaandgerelawplnaam;

				public String getKadnnppostlocatievbohoofdadrnumaandgerelawplnaam () {
					return this.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam;
				}
				
			    public String kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam;

				public String getKadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam () {
					return this.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam;
				}
				
			    public String kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam;

				public String getKadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam () {
					return this.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam;
				}
				
			    public String kadnnppostlocatienevenadrhuisnummer;

				public String getKadnnppostlocatienevenadrhuisnummer () {
					return this.kadnnppostlocatienevenadrhuisnummer;
				}
				
			    public String kadnnppostlocatienevenadrhuisletter;

				public String getKadnnppostlocatienevenadrhuisletter () {
					return this.kadnnppostlocatienevenadrhuisletter;
				}
				
			    public String kadnnppostlocatienevenadrhuisnumtoevoeg;

				public String getKadnnppostlocatienevenadrhuisnumtoevoeg () {
					return this.kadnnppostlocatienevenadrhuisnumtoevoeg;
				}
				
			    public String kadnnppostlocatienevenadrpostcode;

				public String getKadnnppostlocatienevenadrpostcode () {
					return this.kadnnppostlocatienevenadrpostcode;
				}
				
			    public String kadnnppostlocatienevenadrgerwoonplaatsnaam;

				public String getKadnnppostlocatienevenadrgerwoonplaatsnaam () {
					return this.kadnnppostlocatienevenadrgerwoonplaatsnaam;
				}
				
			    public String kadnnppostlocatienevenadrgeropenbareruimtenaam;

				public String getKadnnppostlocatienevenadrgeropenbareruimtenaam () {
					return this.kadnnppostlocatienevenadrgeropenbareruimtenaam;
				}
				
			    public String kadnnppostlocatienevenadroprgerwoonplaatsnaam;

				public String getKadnnppostlocatienevenadroprgerwoonplaatsnaam () {
					return this.kadnnppostlocatienevenadroprgerwoonplaatsnaam;
				}
				
			    public String kadnnppostlocatiestandplaatsbagid;

				public String getKadnnppostlocatiestandplaatsbagid () {
					return this.kadnnppostlocatiestandplaatsbagid;
				}
				
			    public String kadnnppostlocatiestandplaatshfdadreshuisnummer;

				public String getKadnnppostlocatiestandplaatshfdadreshuisnummer () {
					return this.kadnnppostlocatiestandplaatshfdadreshuisnummer;
				}
				
			    public String kadnnppostlocatiestandplaatshfdadreshuisletter;

				public String getKadnnppostlocatiestandplaatshfdadreshuisletter () {
					return this.kadnnppostlocatiestandplaatshfdadreshuisletter;
				}
				
			    public String kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg;

				public String getKadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg () {
					return this.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg;
				}
				
			    public String kadnnppostlocatiestandplaatshfdadrespostcode;

				public String getKadnnppostlocatiestandplaatshfdadrespostcode () {
					return this.kadnnppostlocatiestandplaatshfdadrespostcode;
				}
				
			    public String kadnnppostlocatiestandplaatshfdadresgerwplnaam;

				public String getKadnnppostlocatiestandplaatshfdadresgerwplnaam () {
					return this.kadnnppostlocatiestandplaatshfdadresgerwplnaam;
				}
				
			    public String kadnnppostlocatiestandplaatshfdadresgeroprnaam;

				public String getKadnnppostlocatiestandplaatshfdadresgeroprnaam () {
					return this.kadnnppostlocatiestandplaatshfdadresgeroprnaam;
				}
				
			    public String kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam;

				public String getKadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam () {
					return this.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam;
				}
				
			    public String kadnnppostlocatiestandplaatsnevadreshuisnummer;

				public String getKadnnppostlocatiestandplaatsnevadreshuisnummer () {
					return this.kadnnppostlocatiestandplaatsnevadreshuisnummer;
				}
				
			    public String kadnnppostlocatiestandplaatsnevadreshuisletter;

				public String getKadnnppostlocatiestandplaatsnevadreshuisletter () {
					return this.kadnnppostlocatiestandplaatsnevadreshuisletter;
				}
				
			    public String kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg;

				public String getKadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg () {
					return this.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg;
				}
				
			    public String kadnnppostlocatiestandplaatsnevadrespostcode;

				public String getKadnnppostlocatiestandplaatsnevadrespostcode () {
					return this.kadnnppostlocatiestandplaatsnevadrespostcode;
				}
				
			    public String kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam;

				public String getKadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam () {
					return this.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam;
				}
				
			    public String kadnnppostlocatiestandplaatsnevadresgeroprnaam;

				public String getKadnnppostlocatiestandplaatsnevadresgeroprnaam () {
					return this.kadnnppostlocatiestandplaatsnevadresgeroprnaam;
				}
				
			    public String kadnnppostlocatiestandplaatsnevadresoprgerwplnaam;

				public String getKadnnppostlocatiestandplaatsnevadresoprgerwplnaam () {
					return this.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam;
				}
				
			    public String kadnnppostlocatieligplaatshfdadresbagid;

				public String getKadnnppostlocatieligplaatshfdadresbagid () {
					return this.kadnnppostlocatieligplaatshfdadresbagid;
				}
				
			    public String kadnnppostlocatieligplaatshfdadreshuisnummer;

				public String getKadnnppostlocatieligplaatshfdadreshuisnummer () {
					return this.kadnnppostlocatieligplaatshfdadreshuisnummer;
				}
				
			    public String kadnnppostlocatieligplaatshfdadreshuisletter;

				public String getKadnnppostlocatieligplaatshfdadreshuisletter () {
					return this.kadnnppostlocatieligplaatshfdadreshuisletter;
				}
				
			    public String kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg;

				public String getKadnnppostlocatieligplaatshfdadreshuisnumtoevoeg () {
					return this.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg;
				}
				
			    public String kadnnppostlocatieligplaatshfdadrespostcode;

				public String getKadnnppostlocatieligplaatshfdadrespostcode () {
					return this.kadnnppostlocatieligplaatshfdadrespostcode;
				}
				
			    public String kadnnppostlocatieligplaatshfdadreswplnaam;

				public String getKadnnppostlocatieligplaatshfdadreswplnaam () {
					return this.kadnnppostlocatieligplaatshfdadreswplnaam;
				}
				
			    public String kadnnppostlocatieligplaatshfdadresgeroprnaam;

				public String getKadnnppostlocatieligplaatshfdadresgeroprnaam () {
					return this.kadnnppostlocatieligplaatshfdadresgeroprnaam;
				}
				
			    public String kadnnppostlocatieligplaatshfdadresoprgerwplnaam;

				public String getKadnnppostlocatieligplaatshfdadresoprgerwplnaam () {
					return this.kadnnppostlocatieligplaatshfdadresoprgerwplnaam;
				}
				
			    public String kadnnppostlocatieligplaatsnevadreshuisnummer;

				public String getKadnnppostlocatieligplaatsnevadreshuisnummer () {
					return this.kadnnppostlocatieligplaatsnevadreshuisnummer;
				}
				
			    public String kadnnppostlocatieligplaatsnevadreshuisletter;

				public String getKadnnppostlocatieligplaatsnevadreshuisletter () {
					return this.kadnnppostlocatieligplaatsnevadreshuisletter;
				}
				
			    public String kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg;

				public String getKadnnppostlocatieligplaatsnevadreshuisnumtoevoeg () {
					return this.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg;
				}
				
			    public String kadnnppostlocatieligplaatsnevadrespostcode;

				public String getKadnnppostlocatieligplaatsnevadrespostcode () {
					return this.kadnnppostlocatieligplaatsnevadrespostcode;
				}
				
			    public String kadnnppostlocatieligplaatsnevadresgerwplnaam;

				public String getKadnnppostlocatieligplaatsnevadresgerwplnaam () {
					return this.kadnnppostlocatieligplaatsnevadresgerwplnaam;
				}
				
			    public String kadnnppostlocatieligplaatsnevadresgeroprnaam;

				public String getKadnnppostlocatieligplaatsnevadresgeroprnaam () {
					return this.kadnnppostlocatieligplaatsnevadresgeroprnaam;
				}
				
			    public String kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam;

				public String getKadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam () {
					return this.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam;
				}
				
			    public String kadnnppostlocatiekadbuitenlandsadres;

				public String getKadnnppostlocatiekadbuitenlandsadres () {
					return this.kadnnppostlocatiekadbuitenlandsadres;
				}
				
			    public String kadnnppostlocatiekadbuitenlandsadreswoonplaats;

				public String getKadnnppostlocatiekadbuitenlandsadreswoonplaats () {
					return this.kadnnppostlocatiekadbuitenlandsadreswoonplaats;
				}
				
			    public String kadnnppostlocatiekadbuitenlandsadresregio;

				public String getKadnnppostlocatiekadbuitenlandsadresregio () {
					return this.kadnnppostlocatiekadbuitenlandsadresregio;
				}
				
			    public String kadnnppostlocatiekadbuitenlandsadresland;

				public String getKadnnppostlocatiekadbuitenlandsadresland () {
					return this.kadnnppostlocatiekadbuitenlandsadresland;
				}
				
			    public String kadnnppostlocatiebuitenlandsadres;

				public String getKadnnppostlocatiebuitenlandsadres () {
					return this.kadnnppostlocatiebuitenlandsadres;
				}
				
			    public String kadnnppostlocatiebuitenlandsadreswoonplaats;

				public String getKadnnppostlocatiebuitenlandsadreswoonplaats () {
					return this.kadnnppostlocatiebuitenlandsadreswoonplaats;
				}
				
			    public String kadnnppostlocatiebuitenlandsadresregio;

				public String getKadnnppostlocatiebuitenlandsadresregio () {
					return this.kadnnppostlocatiebuitenlandsadresregio;
				}
				
			    public String kadnnppostlocatiebuitenlandsadreslandcode;

				public String getKadnnppostlocatiebuitenlandsadreslandcode () {
					return this.kadnnppostlocatiebuitenlandsadreslandcode;
				}
				
			    public String kadnnppostlocatiebuitenlandsadreslandwaarde;

				public String getKadnnppostlocatiebuitenlandsadreslandwaarde () {
					return this.kadnnppostlocatiebuitenlandsadreslandwaarde;
				}
				
			    public String kadnnppostlocatiepostbusadrespostbusnummer;

				public String getKadnnppostlocatiepostbusadrespostbusnummer () {
					return this.kadnnppostlocatiepostbusadrespostbusnummer;
				}
				
			    public String kadnnppostlocatiepostbusadrespostcode;

				public String getKadnnppostlocatiepostbusadrespostcode () {
					return this.kadnnppostlocatiepostbusadrespostcode;
				}
				
			    public String kadnnppostlocatiepostbusadreswoonplaatsnaam;

				public String getKadnnppostlocatiepostbusadreswoonplaatsnaam () {
					return this.kadnnppostlocatiepostbusadreswoonplaatsnaam;
				}
				
			    public String kadnnpwoonlocatiebuitladres;

				public String getKadnnpwoonlocatiebuitladres () {
					return this.kadnnpwoonlocatiebuitladres;
				}
				
			    public String kadnnpwoonlocatiebuitladreswoonplaats;

				public String getKadnnpwoonlocatiebuitladreswoonplaats () {
					return this.kadnnpwoonlocatiebuitladreswoonplaats;
				}
				
			    public String kadnnpwoonlocatiebuitladresregio;

				public String getKadnnpwoonlocatiebuitladresregio () {
					return this.kadnnpwoonlocatiebuitladresregio;
				}
				
			    public String kadnnpwoonlocatiebuitladreslandcode;

				public String getKadnnpwoonlocatiebuitladreslandcode () {
					return this.kadnnpwoonlocatiebuitladreslandcode;
				}
				
			    public String kadnnpwoonlocatiebuitladreslandwaarde;

				public String getKadnnpwoonlocatiebuitladreslandwaarde () {
					return this.kadnnpwoonlocatiebuitladreslandwaarde;
				}
				
			    public String kadnnpwoonlocatiekadbuitladres;

				public String getKadnnpwoonlocatiekadbuitladres () {
					return this.kadnnpwoonlocatiekadbuitladres;
				}
				
			    public String kadnnpwoonlocatiekadbuitladreswoonplaats;

				public String getKadnnpwoonlocatiekadbuitladreswoonplaats () {
					return this.kadnnpwoonlocatiekadbuitladreswoonplaats;
				}
				
			    public String kadnnpwoonlocatiekadbuitladresregio;

				public String getKadnnpwoonlocatiekadbuitladresregio () {
					return this.kadnnpwoonlocatiekadbuitladresregio;
				}
				
			    public String kadnnpwoonlocatiekadbuitladresland;

				public String getKadnnpwoonlocatiekadbuitladresland () {
					return this.kadnnpwoonlocatiekadbuitladresland;
				}
				
			    public String kadnnpwoonlocatieligplaatsbagid;

				public String getKadnnpwoonlocatieligplaatsbagid () {
					return this.kadnnpwoonlocatieligplaatsbagid;
				}
				
			    public String kadnnpwoonlocatieligplaatshfdadrhuisnummer;

				public String getKadnnpwoonlocatieligplaatshfdadrhuisnummer () {
					return this.kadnnpwoonlocatieligplaatshfdadrhuisnummer;
				}
				
			    public String kadnnpwoonlocatieligplaatshfdadrhuisletter;

				public String getKadnnpwoonlocatieligplaatshfdadrhuisletter () {
					return this.kadnnpwoonlocatieligplaatshfdadrhuisletter;
				}
				
			    public String kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg;

				public String getKadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg () {
					return this.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg;
				}
				
			    public String kadnnpwoonlocatieligplaatshfdadrpostcode;

				public String getKadnnpwoonlocatieligplaatshfdadrpostcode () {
					return this.kadnnpwoonlocatieligplaatshfdadrpostcode;
				}
				
			    public String kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam;

				public String getKadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam () {
					return this.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam;
				}
				
			    public String kadnnpwoonlocatieligplaatshfdadrgeroprnaam;

				public String getKadnnpwoonlocatieligplaatshfdadrgeroprnaam () {
					return this.kadnnpwoonlocatieligplaatshfdadrgeroprnaam;
				}
				
			    public String kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam;

				public String getKadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam () {
					return this.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam;
				}
				
			    public String kadnnpwoonlocatieligplaatsnevadrhuisnummer;

				public String getKadnnpwoonlocatieligplaatsnevadrhuisnummer () {
					return this.kadnnpwoonlocatieligplaatsnevadrhuisnummer;
				}
				
			    public String kadnnpwoonlocatieligplaatsnevadrhuisletter;

				public String getKadnnpwoonlocatieligplaatsnevadrhuisletter () {
					return this.kadnnpwoonlocatieligplaatsnevadrhuisletter;
				}
				
			    public String kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg;

				public String getKadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg () {
					return this.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg;
				}
				
			    public String kadnnpwoonlocatieligplaatsnevadrpostcode;

				public String getKadnnpwoonlocatieligplaatsnevadrpostcode () {
					return this.kadnnpwoonlocatieligplaatsnevadrpostcode;
				}
				
			    public String kadnnpwoonlocatieligplaatsnevadrgerwplnaam;

				public String getKadnnpwoonlocatieligplaatsnevadrgerwplnaam () {
					return this.kadnnpwoonlocatieligplaatsnevadrgerwplnaam;
				}
				
			    public String kadnnpwoonlocatieligplaatsnevadroprnaam;

				public String getKadnnpwoonlocatieligplaatsnevadroprnaam () {
					return this.kadnnpwoonlocatieligplaatsnevadroprnaam;
				}
				
			    public String kadnnpwoonlocatieligplaatsnevadroprgerwplnaam;

				public String getKadnnpwoonlocatieligplaatsnevadroprgerwplnaam () {
					return this.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam;
				}
				
			    public String kadnnpwoonlocatiestandplaatsbagid;

				public String getKadnnpwoonlocatiestandplaatsbagid () {
					return this.kadnnpwoonlocatiestandplaatsbagid;
				}
				
			    public String kadnnpwoonlocatiestandplaatshfdadreshuisnummer;

				public String getKadnnpwoonlocatiestandplaatshfdadreshuisnummer () {
					return this.kadnnpwoonlocatiestandplaatshfdadreshuisnummer;
				}
				
			    public String kadnnpwoonlocatiestandplaatshfdadreshuisletter;

				public String getKadnnpwoonlocatiestandplaatshfdadreshuisletter () {
					return this.kadnnpwoonlocatiestandplaatshfdadreshuisletter;
				}
				
			    public String kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg;

				public String getKadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg () {
					return this.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg;
				}
				
			    public String kadnnpwoonlocatiestandplaatshfdadrespostcode;

				public String getKadnnpwoonlocatiestandplaatshfdadrespostcode () {
					return this.kadnnpwoonlocatiestandplaatshfdadrespostcode;
				}
				
			    public String kadnnpwoonlocatiestandplaatshfdadresgerwplnaam;

				public String getKadnnpwoonlocatiestandplaatshfdadresgerwplnaam () {
					return this.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam;
				}
				
			    public String kadnnpwoonlocatiestandplaatshfdadresgeroprnaam;

				public String getKadnnpwoonlocatiestandplaatshfdadresgeroprnaam () {
					return this.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam;
				}
				
			    public String kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam;

				public String getKadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam () {
					return this.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam;
				}
				
			    public String kadnnpwoonlocatiestandplaatsnevadreshuisnummer;

				public String getKadnnpwoonlocatiestandplaatsnevadreshuisnummer () {
					return this.kadnnpwoonlocatiestandplaatsnevadreshuisnummer;
				}
				
			    public String kadnnpwoonlocatiestandplaatsnevadreshuisletter;

				public String getKadnnpwoonlocatiestandplaatsnevadreshuisletter () {
					return this.kadnnpwoonlocatiestandplaatsnevadreshuisletter;
				}
				
			    public String kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg;

				public String getKadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg () {
					return this.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg;
				}
				
			    public String kadnnpwoonlocatiestandplaatsnevadrespostcode;

				public String getKadnnpwoonlocatiestandplaatsnevadrespostcode () {
					return this.kadnnpwoonlocatiestandplaatsnevadrespostcode;
				}
				
			    public String kadnnpwoonlocatiestandplaatsnevadresgerwplnaam;

				public String getKadnnpwoonlocatiestandplaatsnevadresgerwplnaam () {
					return this.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam;
				}
				
			    public String kadnnpwoonlocatiestandplaatsnevadresgeroprnaam;

				public String getKadnnpwoonlocatiestandplaatsnevadresgeroprnaam () {
					return this.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam;
				}
				
			    public String kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam;

				public String getKadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam () {
					return this.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam;
				}
				
			    public String kadnnpwoonlocatievbobagid;

				public String getKadnnpwoonlocatievbobagid () {
					return this.kadnnpwoonlocatievbobagid;
				}
				
			    public String kadnnpwoonlocatievbohfdadreshuisnummer;

				public String getKadnnpwoonlocatievbohfdadreshuisnummer () {
					return this.kadnnpwoonlocatievbohfdadreshuisnummer;
				}
				
			    public String kadnnpwoonlocatievbohfdadreshuisletter;

				public String getKadnnpwoonlocatievbohfdadreshuisletter () {
					return this.kadnnpwoonlocatievbohfdadreshuisletter;
				}
				
			    public String kadnnpwoonlocatievbohfdadreshuisnumtoevoeg;

				public String getKadnnpwoonlocatievbohfdadreshuisnumtoevoeg () {
					return this.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg;
				}
				
			    public String kadnnpwoonlocatievbohfdadrespostcode;

				public String getKadnnpwoonlocatievbohfdadrespostcode () {
					return this.kadnnpwoonlocatievbohfdadrespostcode;
				}
				
			    public String kadnnpwoonlocatievbohfdadreswplaam;

				public String getKadnnpwoonlocatievbohfdadreswplaam () {
					return this.kadnnpwoonlocatievbohfdadreswplaam;
				}
				
			    public String kadnnpwoonlocatievbohfdadresoprnaam;

				public String getKadnnpwoonlocatievbohfdadresoprnaam () {
					return this.kadnnpwoonlocatievbohfdadresoprnaam;
				}
				
			    public String kadnnpwoonlocatievbohfdadresoprgerwplnaam;

				public String getKadnnpwoonlocatievbohfdadresoprgerwplnaam () {
					return this.kadnnpwoonlocatievbohfdadresoprgerwplnaam;
				}
				
			    public String kadnnpwoonlocatievbonevadreshuisnummer;

				public String getKadnnpwoonlocatievbonevadreshuisnummer () {
					return this.kadnnpwoonlocatievbonevadreshuisnummer;
				}
				
			    public String kadnnpwoonlocatievbonevadreshuisletter;

				public String getKadnnpwoonlocatievbonevadreshuisletter () {
					return this.kadnnpwoonlocatievbonevadreshuisletter;
				}
				
			    public String kadnnpwoonlocatievbonevadreshuisnumoevoeg;

				public String getKadnnpwoonlocatievbonevadreshuisnumoevoeg () {
					return this.kadnnpwoonlocatievbonevadreshuisnumoevoeg;
				}
				
			    public String kadnnpwoonlocatievbonevadrespostcode;

				public String getKadnnpwoonlocatievbonevadrespostcode () {
					return this.kadnnpwoonlocatievbonevadrespostcode;
				}
				
			    public String kadnnpwoonlocatievbonevadresgerwplnaam;

				public String getKadnnpwoonlocatievbonevadresgerwplnaam () {
					return this.kadnnpwoonlocatievbonevadresgerwplnaam;
				}
				
			    public String kadnnpwoonlocatievbonevadresgeroprnaam;

				public String getKadnnpwoonlocatievbonevadresgeroprnaam () {
					return this.kadnnpwoonlocatievbonevadresgeroprnaam;
				}
				
			    public String kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam;

				public String getKadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam () {
					return this.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam;
				}
				
			    public String kadnnpwoonlocatiekadbinadropenbareruimtenaam;

				public String getKadnnpwoonlocatiekadbinadropenbareruimtenaam () {
					return this.kadnnpwoonlocatiekadbinadropenbareruimtenaam;
				}
				
			    public String kadnnpwoonlocatiekadbinadrhuisletter;

				public String getKadnnpwoonlocatiekadbinadrhuisletter () {
					return this.kadnnpwoonlocatiekadbinadrhuisletter;
				}
				
			    public String kadnnpwoonlocatiekadbinadrhuisnummer;

				public String getKadnnpwoonlocatiekadbinadrhuisnummer () {
					return this.kadnnpwoonlocatiekadbinadrhuisnummer;
				}
				
			    public String kadnnpwoonlocatiekadbinadrhuisnumtoevoeg;

				public String getKadnnpwoonlocatiekadbinadrhuisnumtoevoeg () {
					return this.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg;
				}
				
			    public String kadnnpwoonlocatiekadbinadrpostcode;

				public String getKadnnpwoonlocatiekadbinadrpostcode () {
					return this.kadnnpwoonlocatiekadbinadrpostcode;
				}
				
			    public String kadnnpwoonlocatiekadbinadrwplnaam;

				public String getKadnnpwoonlocatiekadbinadrwplnaam () {
					return this.kadnnpwoonlocatiekadbinadrwplnaam;
				}
				
			    public String kadnnpnaam;

				public String getKadnnpnaam () {
					return this.kadnnpnaam;
				}
				
			    public String kadnnprechtsvormcode;

				public String getKadnnprechtsvormcode () {
					return this.kadnnprechtsvormcode;
				}
				
			    public String kadnnprechtsvormwaarde;

				public String getKadnnprechtsvormwaarde () {
					return this.kadnnprechtsvormwaarde;
				}
				
			    public String kadnnpstatutairezetel;

				public String getKadnnpstatutairezetel () {
					return this.kadnnpstatutairezetel;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.kadnnpid == null) ? 0 : this.kadnnpid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final out1Struct other = (out1Struct) obj;
		
						if (this.kadnnpid == null) {
							if (other.kadnnpid != null)
								return false;
						
						} else if (!this.kadnnpid.equals(other.kadnnpid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(out1Struct other) {

		other.kdoreferentie = this.kdoreferentie;
	            other.toestandsdatum = this.toestandsdatum;
	            other.kadnnpid = this.kadnnpid;
	            other.kadnnpidnamespace = this.kadnnpidnamespace;
	            other.kadnnpidlokaalid = this.kadnnpidlokaalid;
	            other.kadnnpidversie = this.kadnnpidversie;
	            other.kadnnpbeschikkingbevoegdheidcode = this.kadnnpbeschikkingbevoegdheidcode;
	            other.kadnnpbeschikkingbevoegdheidwaarde = this.kadnnpbeschikkingbevoegdheidwaarde;
	            other.kadnnppostlocatiekadbinadresopenbareruimtenaam = this.kadnnppostlocatiekadbinadresopenbareruimtenaam;
	            other.kadnnppostlocatiekadbinadreshuisletter = this.kadnnppostlocatiekadbinadreshuisletter;
	            other.kadnnppostlocatiekadbinadreshuisnummer = this.kadnnppostlocatiekadbinadreshuisnummer;
	            other.kadnnppostlocatiekadbinadreshuisnumtoevoeg = this.kadnnppostlocatiekadbinadreshuisnumtoevoeg;
	            other.kadnnppostlocatiekadbinadrespostcode = this.kadnnppostlocatiekadbinadrespostcode;
	            other.kadnnppostlocatiekadbinadreswoonplaatsnaam = this.kadnnppostlocatiekadbinadreswoonplaatsnaam;
	            other.kadnnppostlocatievbobagidentificatie = this.kadnnppostlocatievbobagidentificatie;
	            other.kadnnppostlocatievbohoofdadrnumaandhuisnummer = this.kadnnppostlocatievbohoofdadrnumaandhuisnummer;
	            other.kadnnppostlocatievbohoofdadrnumaandhuisletter = this.kadnnppostlocatievbohoofdadrnumaandhuisletter;
	            other.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg = this.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg;
	            other.kadnnppostlocatievbohoofdadrnumaandpostcode = this.kadnnppostlocatievbohoofdadrnumaandpostcode;
	            other.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam = this.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam;
	            other.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam = this.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam;
	            other.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam = this.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam;
	            other.kadnnppostlocatienevenadrhuisnummer = this.kadnnppostlocatienevenadrhuisnummer;
	            other.kadnnppostlocatienevenadrhuisletter = this.kadnnppostlocatienevenadrhuisletter;
	            other.kadnnppostlocatienevenadrhuisnumtoevoeg = this.kadnnppostlocatienevenadrhuisnumtoevoeg;
	            other.kadnnppostlocatienevenadrpostcode = this.kadnnppostlocatienevenadrpostcode;
	            other.kadnnppostlocatienevenadrgerwoonplaatsnaam = this.kadnnppostlocatienevenadrgerwoonplaatsnaam;
	            other.kadnnppostlocatienevenadrgeropenbareruimtenaam = this.kadnnppostlocatienevenadrgeropenbareruimtenaam;
	            other.kadnnppostlocatienevenadroprgerwoonplaatsnaam = this.kadnnppostlocatienevenadroprgerwoonplaatsnaam;
	            other.kadnnppostlocatiestandplaatsbagid = this.kadnnppostlocatiestandplaatsbagid;
	            other.kadnnppostlocatiestandplaatshfdadreshuisnummer = this.kadnnppostlocatiestandplaatshfdadreshuisnummer;
	            other.kadnnppostlocatiestandplaatshfdadreshuisletter = this.kadnnppostlocatiestandplaatshfdadreshuisletter;
	            other.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg = this.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg;
	            other.kadnnppostlocatiestandplaatshfdadrespostcode = this.kadnnppostlocatiestandplaatshfdadrespostcode;
	            other.kadnnppostlocatiestandplaatshfdadresgerwplnaam = this.kadnnppostlocatiestandplaatshfdadresgerwplnaam;
	            other.kadnnppostlocatiestandplaatshfdadresgeroprnaam = this.kadnnppostlocatiestandplaatshfdadresgeroprnaam;
	            other.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam = this.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam;
	            other.kadnnppostlocatiestandplaatsnevadreshuisnummer = this.kadnnppostlocatiestandplaatsnevadreshuisnummer;
	            other.kadnnppostlocatiestandplaatsnevadreshuisletter = this.kadnnppostlocatiestandplaatsnevadreshuisletter;
	            other.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg = this.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg;
	            other.kadnnppostlocatiestandplaatsnevadrespostcode = this.kadnnppostlocatiestandplaatsnevadrespostcode;
	            other.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam = this.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam;
	            other.kadnnppostlocatiestandplaatsnevadresgeroprnaam = this.kadnnppostlocatiestandplaatsnevadresgeroprnaam;
	            other.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam = this.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam;
	            other.kadnnppostlocatieligplaatshfdadresbagid = this.kadnnppostlocatieligplaatshfdadresbagid;
	            other.kadnnppostlocatieligplaatshfdadreshuisnummer = this.kadnnppostlocatieligplaatshfdadreshuisnummer;
	            other.kadnnppostlocatieligplaatshfdadreshuisletter = this.kadnnppostlocatieligplaatshfdadreshuisletter;
	            other.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg = this.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg;
	            other.kadnnppostlocatieligplaatshfdadrespostcode = this.kadnnppostlocatieligplaatshfdadrespostcode;
	            other.kadnnppostlocatieligplaatshfdadreswplnaam = this.kadnnppostlocatieligplaatshfdadreswplnaam;
	            other.kadnnppostlocatieligplaatshfdadresgeroprnaam = this.kadnnppostlocatieligplaatshfdadresgeroprnaam;
	            other.kadnnppostlocatieligplaatshfdadresoprgerwplnaam = this.kadnnppostlocatieligplaatshfdadresoprgerwplnaam;
	            other.kadnnppostlocatieligplaatsnevadreshuisnummer = this.kadnnppostlocatieligplaatsnevadreshuisnummer;
	            other.kadnnppostlocatieligplaatsnevadreshuisletter = this.kadnnppostlocatieligplaatsnevadreshuisletter;
	            other.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg = this.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg;
	            other.kadnnppostlocatieligplaatsnevadrespostcode = this.kadnnppostlocatieligplaatsnevadrespostcode;
	            other.kadnnppostlocatieligplaatsnevadresgerwplnaam = this.kadnnppostlocatieligplaatsnevadresgerwplnaam;
	            other.kadnnppostlocatieligplaatsnevadresgeroprnaam = this.kadnnppostlocatieligplaatsnevadresgeroprnaam;
	            other.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam = this.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam;
	            other.kadnnppostlocatiekadbuitenlandsadres = this.kadnnppostlocatiekadbuitenlandsadres;
	            other.kadnnppostlocatiekadbuitenlandsadreswoonplaats = this.kadnnppostlocatiekadbuitenlandsadreswoonplaats;
	            other.kadnnppostlocatiekadbuitenlandsadresregio = this.kadnnppostlocatiekadbuitenlandsadresregio;
	            other.kadnnppostlocatiekadbuitenlandsadresland = this.kadnnppostlocatiekadbuitenlandsadresland;
	            other.kadnnppostlocatiebuitenlandsadres = this.kadnnppostlocatiebuitenlandsadres;
	            other.kadnnppostlocatiebuitenlandsadreswoonplaats = this.kadnnppostlocatiebuitenlandsadreswoonplaats;
	            other.kadnnppostlocatiebuitenlandsadresregio = this.kadnnppostlocatiebuitenlandsadresregio;
	            other.kadnnppostlocatiebuitenlandsadreslandcode = this.kadnnppostlocatiebuitenlandsadreslandcode;
	            other.kadnnppostlocatiebuitenlandsadreslandwaarde = this.kadnnppostlocatiebuitenlandsadreslandwaarde;
	            other.kadnnppostlocatiepostbusadrespostbusnummer = this.kadnnppostlocatiepostbusadrespostbusnummer;
	            other.kadnnppostlocatiepostbusadrespostcode = this.kadnnppostlocatiepostbusadrespostcode;
	            other.kadnnppostlocatiepostbusadreswoonplaatsnaam = this.kadnnppostlocatiepostbusadreswoonplaatsnaam;
	            other.kadnnpwoonlocatiebuitladres = this.kadnnpwoonlocatiebuitladres;
	            other.kadnnpwoonlocatiebuitladreswoonplaats = this.kadnnpwoonlocatiebuitladreswoonplaats;
	            other.kadnnpwoonlocatiebuitladresregio = this.kadnnpwoonlocatiebuitladresregio;
	            other.kadnnpwoonlocatiebuitladreslandcode = this.kadnnpwoonlocatiebuitladreslandcode;
	            other.kadnnpwoonlocatiebuitladreslandwaarde = this.kadnnpwoonlocatiebuitladreslandwaarde;
	            other.kadnnpwoonlocatiekadbuitladres = this.kadnnpwoonlocatiekadbuitladres;
	            other.kadnnpwoonlocatiekadbuitladreswoonplaats = this.kadnnpwoonlocatiekadbuitladreswoonplaats;
	            other.kadnnpwoonlocatiekadbuitladresregio = this.kadnnpwoonlocatiekadbuitladresregio;
	            other.kadnnpwoonlocatiekadbuitladresland = this.kadnnpwoonlocatiekadbuitladresland;
	            other.kadnnpwoonlocatieligplaatsbagid = this.kadnnpwoonlocatieligplaatsbagid;
	            other.kadnnpwoonlocatieligplaatshfdadrhuisnummer = this.kadnnpwoonlocatieligplaatshfdadrhuisnummer;
	            other.kadnnpwoonlocatieligplaatshfdadrhuisletter = this.kadnnpwoonlocatieligplaatshfdadrhuisletter;
	            other.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg = this.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg;
	            other.kadnnpwoonlocatieligplaatshfdadrpostcode = this.kadnnpwoonlocatieligplaatshfdadrpostcode;
	            other.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam = this.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam;
	            other.kadnnpwoonlocatieligplaatshfdadrgeroprnaam = this.kadnnpwoonlocatieligplaatshfdadrgeroprnaam;
	            other.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam = this.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam;
	            other.kadnnpwoonlocatieligplaatsnevadrhuisnummer = this.kadnnpwoonlocatieligplaatsnevadrhuisnummer;
	            other.kadnnpwoonlocatieligplaatsnevadrhuisletter = this.kadnnpwoonlocatieligplaatsnevadrhuisletter;
	            other.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg = this.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg;
	            other.kadnnpwoonlocatieligplaatsnevadrpostcode = this.kadnnpwoonlocatieligplaatsnevadrpostcode;
	            other.kadnnpwoonlocatieligplaatsnevadrgerwplnaam = this.kadnnpwoonlocatieligplaatsnevadrgerwplnaam;
	            other.kadnnpwoonlocatieligplaatsnevadroprnaam = this.kadnnpwoonlocatieligplaatsnevadroprnaam;
	            other.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam = this.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam;
	            other.kadnnpwoonlocatiestandplaatsbagid = this.kadnnpwoonlocatiestandplaatsbagid;
	            other.kadnnpwoonlocatiestandplaatshfdadreshuisnummer = this.kadnnpwoonlocatiestandplaatshfdadreshuisnummer;
	            other.kadnnpwoonlocatiestandplaatshfdadreshuisletter = this.kadnnpwoonlocatiestandplaatshfdadreshuisletter;
	            other.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg = this.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg;
	            other.kadnnpwoonlocatiestandplaatshfdadrespostcode = this.kadnnpwoonlocatiestandplaatshfdadrespostcode;
	            other.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam = this.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam;
	            other.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam = this.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam;
	            other.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam = this.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam;
	            other.kadnnpwoonlocatiestandplaatsnevadreshuisnummer = this.kadnnpwoonlocatiestandplaatsnevadreshuisnummer;
	            other.kadnnpwoonlocatiestandplaatsnevadreshuisletter = this.kadnnpwoonlocatiestandplaatsnevadreshuisletter;
	            other.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg = this.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg;
	            other.kadnnpwoonlocatiestandplaatsnevadrespostcode = this.kadnnpwoonlocatiestandplaatsnevadrespostcode;
	            other.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam = this.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam;
	            other.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam = this.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam;
	            other.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam = this.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam;
	            other.kadnnpwoonlocatievbobagid = this.kadnnpwoonlocatievbobagid;
	            other.kadnnpwoonlocatievbohfdadreshuisnummer = this.kadnnpwoonlocatievbohfdadreshuisnummer;
	            other.kadnnpwoonlocatievbohfdadreshuisletter = this.kadnnpwoonlocatievbohfdadreshuisletter;
	            other.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg = this.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg;
	            other.kadnnpwoonlocatievbohfdadrespostcode = this.kadnnpwoonlocatievbohfdadrespostcode;
	            other.kadnnpwoonlocatievbohfdadreswplaam = this.kadnnpwoonlocatievbohfdadreswplaam;
	            other.kadnnpwoonlocatievbohfdadresoprnaam = this.kadnnpwoonlocatievbohfdadresoprnaam;
	            other.kadnnpwoonlocatievbohfdadresoprgerwplnaam = this.kadnnpwoonlocatievbohfdadresoprgerwplnaam;
	            other.kadnnpwoonlocatievbonevadreshuisnummer = this.kadnnpwoonlocatievbonevadreshuisnummer;
	            other.kadnnpwoonlocatievbonevadreshuisletter = this.kadnnpwoonlocatievbonevadreshuisletter;
	            other.kadnnpwoonlocatievbonevadreshuisnumoevoeg = this.kadnnpwoonlocatievbonevadreshuisnumoevoeg;
	            other.kadnnpwoonlocatievbonevadrespostcode = this.kadnnpwoonlocatievbonevadrespostcode;
	            other.kadnnpwoonlocatievbonevadresgerwplnaam = this.kadnnpwoonlocatievbonevadresgerwplnaam;
	            other.kadnnpwoonlocatievbonevadresgeroprnaam = this.kadnnpwoonlocatievbonevadresgeroprnaam;
	            other.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam = this.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam;
	            other.kadnnpwoonlocatiekadbinadropenbareruimtenaam = this.kadnnpwoonlocatiekadbinadropenbareruimtenaam;
	            other.kadnnpwoonlocatiekadbinadrhuisletter = this.kadnnpwoonlocatiekadbinadrhuisletter;
	            other.kadnnpwoonlocatiekadbinadrhuisnummer = this.kadnnpwoonlocatiekadbinadrhuisnummer;
	            other.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg = this.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg;
	            other.kadnnpwoonlocatiekadbinadrpostcode = this.kadnnpwoonlocatiekadbinadrpostcode;
	            other.kadnnpwoonlocatiekadbinadrwplnaam = this.kadnnpwoonlocatiekadbinadrwplnaam;
	            other.kadnnpnaam = this.kadnnpnaam;
	            other.kadnnprechtsvormcode = this.kadnnprechtsvormcode;
	            other.kadnnprechtsvormwaarde = this.kadnnprechtsvormwaarde;
	            other.kadnnpstatutairezetel = this.kadnnpstatutairezetel;
	            
	}

	public void copyKeysDataTo(out1Struct other) {

		other.kadnnpid = this.kadnnpid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_BRK_brk_kadnnp_init.length) {
				if(length < 1024 && commonByteArray_BRK_brk_kadnnp_init.length == 0) {
   					commonByteArray_BRK_brk_kadnnp_init = new byte[1024];
				} else {
   					commonByteArray_BRK_brk_kadnnp_init = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_BRK_brk_kadnnp_init, 0, length);
			strReturn = new String(commonByteArray_BRK_brk_kadnnp_init, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_BRK_brk_kadnnp_init) {

        	try {

        		int length = 0;
		
					this.kdoreferentie = readString(dis);
					
					this.toestandsdatum = readString(dis);
					
					this.kadnnpid = readString(dis);
					
					this.kadnnpidnamespace = readString(dis);
					
					this.kadnnpidlokaalid = readString(dis);
					
					this.kadnnpidversie = readString(dis);
					
					this.kadnnpbeschikkingbevoegdheidcode = readString(dis);
					
					this.kadnnpbeschikkingbevoegdheidwaarde = readString(dis);
					
					this.kadnnppostlocatiekadbinadresopenbareruimtenaam = readString(dis);
					
					this.kadnnppostlocatiekadbinadreshuisletter = readString(dis);
					
					this.kadnnppostlocatiekadbinadreshuisnummer = readString(dis);
					
					this.kadnnppostlocatiekadbinadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnppostlocatiekadbinadrespostcode = readString(dis);
					
					this.kadnnppostlocatiekadbinadreswoonplaatsnaam = readString(dis);
					
					this.kadnnppostlocatievbobagidentificatie = readString(dis);
					
					this.kadnnppostlocatievbohoofdadrnumaandhuisnummer = readString(dis);
					
					this.kadnnppostlocatievbohoofdadrnumaandhuisletter = readString(dis);
					
					this.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg = readString(dis);
					
					this.kadnnppostlocatievbohoofdadrnumaandpostcode = readString(dis);
					
					this.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam = readString(dis);
					
					this.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam = readString(dis);
					
					this.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam = readString(dis);
					
					this.kadnnppostlocatienevenadrhuisnummer = readString(dis);
					
					this.kadnnppostlocatienevenadrhuisletter = readString(dis);
					
					this.kadnnppostlocatienevenadrhuisnumtoevoeg = readString(dis);
					
					this.kadnnppostlocatienevenadrpostcode = readString(dis);
					
					this.kadnnppostlocatienevenadrgerwoonplaatsnaam = readString(dis);
					
					this.kadnnppostlocatienevenadrgeropenbareruimtenaam = readString(dis);
					
					this.kadnnppostlocatienevenadroprgerwoonplaatsnaam = readString(dis);
					
					this.kadnnppostlocatiestandplaatsbagid = readString(dis);
					
					this.kadnnppostlocatiestandplaatshfdadreshuisnummer = readString(dis);
					
					this.kadnnppostlocatiestandplaatshfdadreshuisletter = readString(dis);
					
					this.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnppostlocatiestandplaatshfdadrespostcode = readString(dis);
					
					this.kadnnppostlocatiestandplaatshfdadresgerwplnaam = readString(dis);
					
					this.kadnnppostlocatiestandplaatshfdadresgeroprnaam = readString(dis);
					
					this.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam = readString(dis);
					
					this.kadnnppostlocatiestandplaatsnevadreshuisnummer = readString(dis);
					
					this.kadnnppostlocatiestandplaatsnevadreshuisletter = readString(dis);
					
					this.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnppostlocatiestandplaatsnevadrespostcode = readString(dis);
					
					this.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam = readString(dis);
					
					this.kadnnppostlocatiestandplaatsnevadresgeroprnaam = readString(dis);
					
					this.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadresbagid = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadreshuisnummer = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadreshuisletter = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadrespostcode = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadreswplnaam = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadresgeroprnaam = readString(dis);
					
					this.kadnnppostlocatieligplaatshfdadresoprgerwplnaam = readString(dis);
					
					this.kadnnppostlocatieligplaatsnevadreshuisnummer = readString(dis);
					
					this.kadnnppostlocatieligplaatsnevadreshuisletter = readString(dis);
					
					this.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnppostlocatieligplaatsnevadrespostcode = readString(dis);
					
					this.kadnnppostlocatieligplaatsnevadresgerwplnaam = readString(dis);
					
					this.kadnnppostlocatieligplaatsnevadresgeroprnaam = readString(dis);
					
					this.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam = readString(dis);
					
					this.kadnnppostlocatiekadbuitenlandsadres = readString(dis);
					
					this.kadnnppostlocatiekadbuitenlandsadreswoonplaats = readString(dis);
					
					this.kadnnppostlocatiekadbuitenlandsadresregio = readString(dis);
					
					this.kadnnppostlocatiekadbuitenlandsadresland = readString(dis);
					
					this.kadnnppostlocatiebuitenlandsadres = readString(dis);
					
					this.kadnnppostlocatiebuitenlandsadreswoonplaats = readString(dis);
					
					this.kadnnppostlocatiebuitenlandsadresregio = readString(dis);
					
					this.kadnnppostlocatiebuitenlandsadreslandcode = readString(dis);
					
					this.kadnnppostlocatiebuitenlandsadreslandwaarde = readString(dis);
					
					this.kadnnppostlocatiepostbusadrespostbusnummer = readString(dis);
					
					this.kadnnppostlocatiepostbusadrespostcode = readString(dis);
					
					this.kadnnppostlocatiepostbusadreswoonplaatsnaam = readString(dis);
					
					this.kadnnpwoonlocatiebuitladres = readString(dis);
					
					this.kadnnpwoonlocatiebuitladreswoonplaats = readString(dis);
					
					this.kadnnpwoonlocatiebuitladresregio = readString(dis);
					
					this.kadnnpwoonlocatiebuitladreslandcode = readString(dis);
					
					this.kadnnpwoonlocatiebuitladreslandwaarde = readString(dis);
					
					this.kadnnpwoonlocatiekadbuitladres = readString(dis);
					
					this.kadnnpwoonlocatiekadbuitladreswoonplaats = readString(dis);
					
					this.kadnnpwoonlocatiekadbuitladresregio = readString(dis);
					
					this.kadnnpwoonlocatiekadbuitladresland = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsbagid = readString(dis);
					
					this.kadnnpwoonlocatieligplaatshfdadrhuisnummer = readString(dis);
					
					this.kadnnpwoonlocatieligplaatshfdadrhuisletter = readString(dis);
					
					this.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg = readString(dis);
					
					this.kadnnpwoonlocatieligplaatshfdadrpostcode = readString(dis);
					
					this.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam = readString(dis);
					
					this.kadnnpwoonlocatieligplaatshfdadrgeroprnaam = readString(dis);
					
					this.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsnevadrhuisnummer = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsnevadrhuisletter = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsnevadrpostcode = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsnevadrgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsnevadroprnaam = readString(dis);
					
					this.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsbagid = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatshfdadreshuisnummer = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatshfdadreshuisletter = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatshfdadrespostcode = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsnevadreshuisnummer = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsnevadreshuisletter = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsnevadrespostcode = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam = readString(dis);
					
					this.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatievbobagid = readString(dis);
					
					this.kadnnpwoonlocatievbohfdadreshuisnummer = readString(dis);
					
					this.kadnnpwoonlocatievbohfdadreshuisletter = readString(dis);
					
					this.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg = readString(dis);
					
					this.kadnnpwoonlocatievbohfdadrespostcode = readString(dis);
					
					this.kadnnpwoonlocatievbohfdadreswplaam = readString(dis);
					
					this.kadnnpwoonlocatievbohfdadresoprnaam = readString(dis);
					
					this.kadnnpwoonlocatievbohfdadresoprgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatievbonevadreshuisnummer = readString(dis);
					
					this.kadnnpwoonlocatievbonevadreshuisletter = readString(dis);
					
					this.kadnnpwoonlocatievbonevadreshuisnumoevoeg = readString(dis);
					
					this.kadnnpwoonlocatievbonevadrespostcode = readString(dis);
					
					this.kadnnpwoonlocatievbonevadresgerwplnaam = readString(dis);
					
					this.kadnnpwoonlocatievbonevadresgeroprnaam = readString(dis);
					
					this.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam = readString(dis);
					
					this.kadnnpwoonlocatiekadbinadropenbareruimtenaam = readString(dis);
					
					this.kadnnpwoonlocatiekadbinadrhuisletter = readString(dis);
					
					this.kadnnpwoonlocatiekadbinadrhuisnummer = readString(dis);
					
					this.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg = readString(dis);
					
					this.kadnnpwoonlocatiekadbinadrpostcode = readString(dis);
					
					this.kadnnpwoonlocatiekadbinadrwplnaam = readString(dis);
					
					this.kadnnpnaam = readString(dis);
					
					this.kadnnprechtsvormcode = readString(dis);
					
					this.kadnnprechtsvormwaarde = readString(dis);
					
					this.kadnnpstatutairezetel = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.kdoreferentie,dos);
					
					// String
				
						writeString(this.toestandsdatum,dos);
					
					// String
				
						writeString(this.kadnnpid,dos);
					
					// String
				
						writeString(this.kadnnpidnamespace,dos);
					
					// String
				
						writeString(this.kadnnpidlokaalid,dos);
					
					// String
				
						writeString(this.kadnnpidversie,dos);
					
					// String
				
						writeString(this.kadnnpbeschikkingbevoegdheidcode,dos);
					
					// String
				
						writeString(this.kadnnpbeschikkingbevoegdheidwaarde,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbinadresopenbareruimtenaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbinadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbinadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbinadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbinadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbinadreswoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbobagidentificatie,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbohoofdadrnumaandhuisnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbohoofdadrnumaandhuisletter,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbohoofdadrnumaandpostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatienevenadrhuisnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatienevenadrhuisletter,dos);
					
					// String
				
						writeString(this.kadnnppostlocatienevenadrhuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnppostlocatienevenadrpostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatienevenadrgerwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatienevenadrgeropenbareruimtenaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatienevenadroprgerwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsbagid,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatshfdadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatshfdadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatshfdadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatshfdadresgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatshfdadresgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsnevadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsnevadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsnevadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsnevadresgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadresbagid,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadreswplnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadresgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatshfdadresoprgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatsnevadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatsnevadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatsnevadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatsnevadresgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatsnevadresgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbuitenlandsadres,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbuitenlandsadreswoonplaats,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbuitenlandsadresregio,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiekadbuitenlandsadresland,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiebuitenlandsadres,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiebuitenlandsadreswoonplaats,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiebuitenlandsadresregio,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiebuitenlandsadreslandcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiebuitenlandsadreslandwaarde,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiepostbusadrespostbusnummer,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiepostbusadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnppostlocatiepostbusadreswoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiebuitladres,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiebuitladreswoonplaats,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiebuitladresregio,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiebuitladreslandcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiebuitladreslandwaarde,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbuitladres,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbuitladreswoonplaats,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbuitladresregio,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbuitladresland,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsbagid,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatshfdadrhuisnummer,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatshfdadrhuisletter,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatshfdadrpostcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatshfdadrgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsnevadrhuisnummer,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsnevadrhuisletter,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsnevadrpostcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsnevadrgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsnevadroprnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsbagid,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatshfdadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatshfdadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatshfdadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsnevadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsnevadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsnevadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbobagid,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbohfdadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbohfdadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbohfdadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbohfdadreswplaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbohfdadresoprnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbohfdadresoprgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbonevadreshuisnummer,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbonevadreshuisletter,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbonevadreshuisnumoevoeg,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbonevadrespostcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbonevadresgerwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbonevadresgeroprnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbinadropenbareruimtenaam,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbinadrhuisletter,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbinadrhuisnummer,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbinadrpostcode,dos);
					
					// String
				
						writeString(this.kadnnpwoonlocatiekadbinadrwplnaam,dos);
					
					// String
				
						writeString(this.kadnnpnaam,dos);
					
					// String
				
						writeString(this.kadnnprechtsvormcode,dos);
					
					// String
				
						writeString(this.kadnnprechtsvormwaarde,dos);
					
					// String
				
						writeString(this.kadnnpstatutairezetel,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("kdoreferentie="+kdoreferentie);
		sb.append(",toestandsdatum="+toestandsdatum);
		sb.append(",kadnnpid="+kadnnpid);
		sb.append(",kadnnpidnamespace="+kadnnpidnamespace);
		sb.append(",kadnnpidlokaalid="+kadnnpidlokaalid);
		sb.append(",kadnnpidversie="+kadnnpidversie);
		sb.append(",kadnnpbeschikkingbevoegdheidcode="+kadnnpbeschikkingbevoegdheidcode);
		sb.append(",kadnnpbeschikkingbevoegdheidwaarde="+kadnnpbeschikkingbevoegdheidwaarde);
		sb.append(",kadnnppostlocatiekadbinadresopenbareruimtenaam="+kadnnppostlocatiekadbinadresopenbareruimtenaam);
		sb.append(",kadnnppostlocatiekadbinadreshuisletter="+kadnnppostlocatiekadbinadreshuisletter);
		sb.append(",kadnnppostlocatiekadbinadreshuisnummer="+kadnnppostlocatiekadbinadreshuisnummer);
		sb.append(",kadnnppostlocatiekadbinadreshuisnumtoevoeg="+kadnnppostlocatiekadbinadreshuisnumtoevoeg);
		sb.append(",kadnnppostlocatiekadbinadrespostcode="+kadnnppostlocatiekadbinadrespostcode);
		sb.append(",kadnnppostlocatiekadbinadreswoonplaatsnaam="+kadnnppostlocatiekadbinadreswoonplaatsnaam);
		sb.append(",kadnnppostlocatievbobagidentificatie="+kadnnppostlocatievbobagidentificatie);
		sb.append(",kadnnppostlocatievbohoofdadrnumaandhuisnummer="+kadnnppostlocatievbohoofdadrnumaandhuisnummer);
		sb.append(",kadnnppostlocatievbohoofdadrnumaandhuisletter="+kadnnppostlocatievbohoofdadrnumaandhuisletter);
		sb.append(",kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg="+kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg);
		sb.append(",kadnnppostlocatievbohoofdadrnumaandpostcode="+kadnnppostlocatievbohoofdadrnumaandpostcode);
		sb.append(",kadnnppostlocatievbohoofdadrnumaandgerelawplnaam="+kadnnppostlocatievbohoofdadrnumaandgerelawplnaam);
		sb.append(",kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam="+kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam);
		sb.append(",kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam="+kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam);
		sb.append(",kadnnppostlocatienevenadrhuisnummer="+kadnnppostlocatienevenadrhuisnummer);
		sb.append(",kadnnppostlocatienevenadrhuisletter="+kadnnppostlocatienevenadrhuisletter);
		sb.append(",kadnnppostlocatienevenadrhuisnumtoevoeg="+kadnnppostlocatienevenadrhuisnumtoevoeg);
		sb.append(",kadnnppostlocatienevenadrpostcode="+kadnnppostlocatienevenadrpostcode);
		sb.append(",kadnnppostlocatienevenadrgerwoonplaatsnaam="+kadnnppostlocatienevenadrgerwoonplaatsnaam);
		sb.append(",kadnnppostlocatienevenadrgeropenbareruimtenaam="+kadnnppostlocatienevenadrgeropenbareruimtenaam);
		sb.append(",kadnnppostlocatienevenadroprgerwoonplaatsnaam="+kadnnppostlocatienevenadroprgerwoonplaatsnaam);
		sb.append(",kadnnppostlocatiestandplaatsbagid="+kadnnppostlocatiestandplaatsbagid);
		sb.append(",kadnnppostlocatiestandplaatshfdadreshuisnummer="+kadnnppostlocatiestandplaatshfdadreshuisnummer);
		sb.append(",kadnnppostlocatiestandplaatshfdadreshuisletter="+kadnnppostlocatiestandplaatshfdadreshuisletter);
		sb.append(",kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg="+kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg);
		sb.append(",kadnnppostlocatiestandplaatshfdadrespostcode="+kadnnppostlocatiestandplaatshfdadrespostcode);
		sb.append(",kadnnppostlocatiestandplaatshfdadresgerwplnaam="+kadnnppostlocatiestandplaatshfdadresgerwplnaam);
		sb.append(",kadnnppostlocatiestandplaatshfdadresgeroprnaam="+kadnnppostlocatiestandplaatshfdadresgeroprnaam);
		sb.append(",kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam="+kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam);
		sb.append(",kadnnppostlocatiestandplaatsnevadreshuisnummer="+kadnnppostlocatiestandplaatsnevadreshuisnummer);
		sb.append(",kadnnppostlocatiestandplaatsnevadreshuisletter="+kadnnppostlocatiestandplaatsnevadreshuisletter);
		sb.append(",kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg="+kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg);
		sb.append(",kadnnppostlocatiestandplaatsnevadrespostcode="+kadnnppostlocatiestandplaatsnevadrespostcode);
		sb.append(",kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam="+kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam);
		sb.append(",kadnnppostlocatiestandplaatsnevadresgeroprnaam="+kadnnppostlocatiestandplaatsnevadresgeroprnaam);
		sb.append(",kadnnppostlocatiestandplaatsnevadresoprgerwplnaam="+kadnnppostlocatiestandplaatsnevadresoprgerwplnaam);
		sb.append(",kadnnppostlocatieligplaatshfdadresbagid="+kadnnppostlocatieligplaatshfdadresbagid);
		sb.append(",kadnnppostlocatieligplaatshfdadreshuisnummer="+kadnnppostlocatieligplaatshfdadreshuisnummer);
		sb.append(",kadnnppostlocatieligplaatshfdadreshuisletter="+kadnnppostlocatieligplaatshfdadreshuisletter);
		sb.append(",kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg="+kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg);
		sb.append(",kadnnppostlocatieligplaatshfdadrespostcode="+kadnnppostlocatieligplaatshfdadrespostcode);
		sb.append(",kadnnppostlocatieligplaatshfdadreswplnaam="+kadnnppostlocatieligplaatshfdadreswplnaam);
		sb.append(",kadnnppostlocatieligplaatshfdadresgeroprnaam="+kadnnppostlocatieligplaatshfdadresgeroprnaam);
		sb.append(",kadnnppostlocatieligplaatshfdadresoprgerwplnaam="+kadnnppostlocatieligplaatshfdadresoprgerwplnaam);
		sb.append(",kadnnppostlocatieligplaatsnevadreshuisnummer="+kadnnppostlocatieligplaatsnevadreshuisnummer);
		sb.append(",kadnnppostlocatieligplaatsnevadreshuisletter="+kadnnppostlocatieligplaatsnevadreshuisletter);
		sb.append(",kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg="+kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg);
		sb.append(",kadnnppostlocatieligplaatsnevadrespostcode="+kadnnppostlocatieligplaatsnevadrespostcode);
		sb.append(",kadnnppostlocatieligplaatsnevadresgerwplnaam="+kadnnppostlocatieligplaatsnevadresgerwplnaam);
		sb.append(",kadnnppostlocatieligplaatsnevadresgeroprnaam="+kadnnppostlocatieligplaatsnevadresgeroprnaam);
		sb.append(",kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam="+kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam);
		sb.append(",kadnnppostlocatiekadbuitenlandsadres="+kadnnppostlocatiekadbuitenlandsadres);
		sb.append(",kadnnppostlocatiekadbuitenlandsadreswoonplaats="+kadnnppostlocatiekadbuitenlandsadreswoonplaats);
		sb.append(",kadnnppostlocatiekadbuitenlandsadresregio="+kadnnppostlocatiekadbuitenlandsadresregio);
		sb.append(",kadnnppostlocatiekadbuitenlandsadresland="+kadnnppostlocatiekadbuitenlandsadresland);
		sb.append(",kadnnppostlocatiebuitenlandsadres="+kadnnppostlocatiebuitenlandsadres);
		sb.append(",kadnnppostlocatiebuitenlandsadreswoonplaats="+kadnnppostlocatiebuitenlandsadreswoonplaats);
		sb.append(",kadnnppostlocatiebuitenlandsadresregio="+kadnnppostlocatiebuitenlandsadresregio);
		sb.append(",kadnnppostlocatiebuitenlandsadreslandcode="+kadnnppostlocatiebuitenlandsadreslandcode);
		sb.append(",kadnnppostlocatiebuitenlandsadreslandwaarde="+kadnnppostlocatiebuitenlandsadreslandwaarde);
		sb.append(",kadnnppostlocatiepostbusadrespostbusnummer="+kadnnppostlocatiepostbusadrespostbusnummer);
		sb.append(",kadnnppostlocatiepostbusadrespostcode="+kadnnppostlocatiepostbusadrespostcode);
		sb.append(",kadnnppostlocatiepostbusadreswoonplaatsnaam="+kadnnppostlocatiepostbusadreswoonplaatsnaam);
		sb.append(",kadnnpwoonlocatiebuitladres="+kadnnpwoonlocatiebuitladres);
		sb.append(",kadnnpwoonlocatiebuitladreswoonplaats="+kadnnpwoonlocatiebuitladreswoonplaats);
		sb.append(",kadnnpwoonlocatiebuitladresregio="+kadnnpwoonlocatiebuitladresregio);
		sb.append(",kadnnpwoonlocatiebuitladreslandcode="+kadnnpwoonlocatiebuitladreslandcode);
		sb.append(",kadnnpwoonlocatiebuitladreslandwaarde="+kadnnpwoonlocatiebuitladreslandwaarde);
		sb.append(",kadnnpwoonlocatiekadbuitladres="+kadnnpwoonlocatiekadbuitladres);
		sb.append(",kadnnpwoonlocatiekadbuitladreswoonplaats="+kadnnpwoonlocatiekadbuitladreswoonplaats);
		sb.append(",kadnnpwoonlocatiekadbuitladresregio="+kadnnpwoonlocatiekadbuitladresregio);
		sb.append(",kadnnpwoonlocatiekadbuitladresland="+kadnnpwoonlocatiekadbuitladresland);
		sb.append(",kadnnpwoonlocatieligplaatsbagid="+kadnnpwoonlocatieligplaatsbagid);
		sb.append(",kadnnpwoonlocatieligplaatshfdadrhuisnummer="+kadnnpwoonlocatieligplaatshfdadrhuisnummer);
		sb.append(",kadnnpwoonlocatieligplaatshfdadrhuisletter="+kadnnpwoonlocatieligplaatshfdadrhuisletter);
		sb.append(",kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg="+kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg);
		sb.append(",kadnnpwoonlocatieligplaatshfdadrpostcode="+kadnnpwoonlocatieligplaatshfdadrpostcode);
		sb.append(",kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam="+kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam);
		sb.append(",kadnnpwoonlocatieligplaatshfdadrgeroprnaam="+kadnnpwoonlocatieligplaatshfdadrgeroprnaam);
		sb.append(",kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam="+kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam);
		sb.append(",kadnnpwoonlocatieligplaatsnevadrhuisnummer="+kadnnpwoonlocatieligplaatsnevadrhuisnummer);
		sb.append(",kadnnpwoonlocatieligplaatsnevadrhuisletter="+kadnnpwoonlocatieligplaatsnevadrhuisletter);
		sb.append(",kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg="+kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg);
		sb.append(",kadnnpwoonlocatieligplaatsnevadrpostcode="+kadnnpwoonlocatieligplaatsnevadrpostcode);
		sb.append(",kadnnpwoonlocatieligplaatsnevadrgerwplnaam="+kadnnpwoonlocatieligplaatsnevadrgerwplnaam);
		sb.append(",kadnnpwoonlocatieligplaatsnevadroprnaam="+kadnnpwoonlocatieligplaatsnevadroprnaam);
		sb.append(",kadnnpwoonlocatieligplaatsnevadroprgerwplnaam="+kadnnpwoonlocatieligplaatsnevadroprgerwplnaam);
		sb.append(",kadnnpwoonlocatiestandplaatsbagid="+kadnnpwoonlocatiestandplaatsbagid);
		sb.append(",kadnnpwoonlocatiestandplaatshfdadreshuisnummer="+kadnnpwoonlocatiestandplaatshfdadreshuisnummer);
		sb.append(",kadnnpwoonlocatiestandplaatshfdadreshuisletter="+kadnnpwoonlocatiestandplaatshfdadreshuisletter);
		sb.append(",kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg="+kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg);
		sb.append(",kadnnpwoonlocatiestandplaatshfdadrespostcode="+kadnnpwoonlocatiestandplaatshfdadrespostcode);
		sb.append(",kadnnpwoonlocatiestandplaatshfdadresgerwplnaam="+kadnnpwoonlocatiestandplaatshfdadresgerwplnaam);
		sb.append(",kadnnpwoonlocatiestandplaatshfdadresgeroprnaam="+kadnnpwoonlocatiestandplaatshfdadresgeroprnaam);
		sb.append(",kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam="+kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam);
		sb.append(",kadnnpwoonlocatiestandplaatsnevadreshuisnummer="+kadnnpwoonlocatiestandplaatsnevadreshuisnummer);
		sb.append(",kadnnpwoonlocatiestandplaatsnevadreshuisletter="+kadnnpwoonlocatiestandplaatsnevadreshuisletter);
		sb.append(",kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg="+kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg);
		sb.append(",kadnnpwoonlocatiestandplaatsnevadrespostcode="+kadnnpwoonlocatiestandplaatsnevadrespostcode);
		sb.append(",kadnnpwoonlocatiestandplaatsnevadresgerwplnaam="+kadnnpwoonlocatiestandplaatsnevadresgerwplnaam);
		sb.append(",kadnnpwoonlocatiestandplaatsnevadresgeroprnaam="+kadnnpwoonlocatiestandplaatsnevadresgeroprnaam);
		sb.append(",kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam="+kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam);
		sb.append(",kadnnpwoonlocatievbobagid="+kadnnpwoonlocatievbobagid);
		sb.append(",kadnnpwoonlocatievbohfdadreshuisnummer="+kadnnpwoonlocatievbohfdadreshuisnummer);
		sb.append(",kadnnpwoonlocatievbohfdadreshuisletter="+kadnnpwoonlocatievbohfdadreshuisletter);
		sb.append(",kadnnpwoonlocatievbohfdadreshuisnumtoevoeg="+kadnnpwoonlocatievbohfdadreshuisnumtoevoeg);
		sb.append(",kadnnpwoonlocatievbohfdadrespostcode="+kadnnpwoonlocatievbohfdadrespostcode);
		sb.append(",kadnnpwoonlocatievbohfdadreswplaam="+kadnnpwoonlocatievbohfdadreswplaam);
		sb.append(",kadnnpwoonlocatievbohfdadresoprnaam="+kadnnpwoonlocatievbohfdadresoprnaam);
		sb.append(",kadnnpwoonlocatievbohfdadresoprgerwplnaam="+kadnnpwoonlocatievbohfdadresoprgerwplnaam);
		sb.append(",kadnnpwoonlocatievbonevadreshuisnummer="+kadnnpwoonlocatievbonevadreshuisnummer);
		sb.append(",kadnnpwoonlocatievbonevadreshuisletter="+kadnnpwoonlocatievbonevadreshuisletter);
		sb.append(",kadnnpwoonlocatievbonevadreshuisnumoevoeg="+kadnnpwoonlocatievbonevadreshuisnumoevoeg);
		sb.append(",kadnnpwoonlocatievbonevadrespostcode="+kadnnpwoonlocatievbonevadrespostcode);
		sb.append(",kadnnpwoonlocatievbonevadresgerwplnaam="+kadnnpwoonlocatievbonevadresgerwplnaam);
		sb.append(",kadnnpwoonlocatievbonevadresgeroprnaam="+kadnnpwoonlocatievbonevadresgeroprnaam);
		sb.append(",kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam="+kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam);
		sb.append(",kadnnpwoonlocatiekadbinadropenbareruimtenaam="+kadnnpwoonlocatiekadbinadropenbareruimtenaam);
		sb.append(",kadnnpwoonlocatiekadbinadrhuisletter="+kadnnpwoonlocatiekadbinadrhuisletter);
		sb.append(",kadnnpwoonlocatiekadbinadrhuisnummer="+kadnnpwoonlocatiekadbinadrhuisnummer);
		sb.append(",kadnnpwoonlocatiekadbinadrhuisnumtoevoeg="+kadnnpwoonlocatiekadbinadrhuisnumtoevoeg);
		sb.append(",kadnnpwoonlocatiekadbinadrpostcode="+kadnnpwoonlocatiekadbinadrpostcode);
		sb.append(",kadnnpwoonlocatiekadbinadrwplnaam="+kadnnpwoonlocatiekadbinadrwplnaam);
		sb.append(",kadnnpnaam="+kadnnpnaam);
		sb.append(",kadnnprechtsvormcode="+kadnnprechtsvormcode);
		sb.append(",kadnnprechtsvormwaarde="+kadnnprechtsvormwaarde);
		sb.append(",kadnnpstatutairezetel="+kadnnpstatutairezetel);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.kadnnpid, other.kadnnpid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_BRK_brk_kadnnp_init = new byte[0];
    static byte[] commonByteArray_BRK_brk_kadnnp_init = new byte[0];

	
			    public routines.system.Document content;

				public routines.system.Document getContent () {
					return this.content;
				}
				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_BRK_brk_kadnnp_init) {

        	try {

        		int length = 0;
		
						this.content = (routines.system.Document) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Document
				
       			    	dos.writeObject(this.content);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("content="+String.valueOf(content));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
out1Struct out1 = new out1Struct();




	
	/**
	 * [tXMLMap_3_TXMLMAP_OUT begin ] start
	 */

	

	
		
		ok_Hash.put("tXMLMap_3_TXMLMAP_OUT", false);
		start_Hash.put("tXMLMap_3_TXMLMAP_OUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_OUT";

	
			if (execStat) {
				if(resourceMap.get("inIterateVComp") == null){
					
						
						if(execStat) {
							runStat.updateStatOnConnection("row1"+iterateId, 0, 0);
						}
						
						
						
					
				}
			} 

		
		int tos_count_tXMLMap_3_TXMLMAP_OUT = 0;
		

	
	
//===============================input xml init part===============================
class XML_API_tXMLMap_3_TXMLMAP_OUT{
	public boolean isDefNull(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null && node instanceof org.dom4j.Element) {
        	org.dom4j.Attribute attri = ((org.dom4j.Element)node).attribute("nil");
        	if(attri != null && ("true").equals(attri.getText())){
            	return true;
            }
        }
        return false;
    }

    public boolean isMissing(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        return node == null ? true : false;
    }

    public boolean isEmpty(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null) {
            return node.getText().length() == 0;
        }
        return false;
    }
}
	class Var__tXMLMap_3_TXMLMAP_OUT__Struct {
	}
	Var__tXMLMap_3_TXMLMAP_OUT__Struct Var__tXMLMap_3_TXMLMAP_OUT = new Var__tXMLMap_3_TXMLMAP_OUT__Struct();
// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
out1Struct out1_save = null;
//the aggregate variable
out1Struct out1_aggregate = null;
//init the resultset for aggregate
java.util.List<Object> allOutsForAggregate_tXMLMap_3 = new java.util.ArrayList<Object>();
globalMap.put("allOutsForAggregate_tXMLMap_3",allOutsForAggregate_tXMLMap_3);
// ###############################
class TreeNode_API_tXMLMap_3_TXMLMAP_OUT {
	java.util.Map<String, String> xpath_value_map = new java.util.HashMap<String, String>();
	
	void clear(){
		xpath_value_map.clear();
	}
	
	void put(String xpath, String value){
		xpath_value_map.put(xpath, value);
	}
	String get_null(String xpath) {
		return null;
	}
	String get_String(String xpath){
		return xpath_value_map.get(xpath);
	}
}
			TreeNode_API_tXMLMap_3_TXMLMAP_OUT treeNodeAPI_tXMLMap_3_TXMLMAP_OUT = new TreeNode_API_tXMLMap_3_TXMLMAP_OUT();
			NameSpaceTool nsTool_tXMLMap_3_TXMLMAP_OUT = new NameSpaceTool();
		int nb_line_tXMLMap_3_TXMLMAP_OUT = 0; 
	
    XML_API_tXMLMap_3_TXMLMAP_OUT xml_api_tXMLMap_3_TXMLMAP_OUT = new XML_API_tXMLMap_3_TXMLMAP_OUT();

	//the map store the previous value of aggregate columns
	java.util.Map<String,Object> aggregateCacheMap_tXMLMap_3_TXMLMAP_OUT = new java.util.HashMap<String,Object>();

	            
 



/**
 * [tXMLMap_3_TXMLMAP_OUT begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";

	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class XML_API_tFileInputXML_1{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();

String[] queryPaths_tFileInputXML_1 = new String[]{	
	"."		
	,"."+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_1 = new boolean[]{	
	true		
	,false
};

String str_tFileInputXML_1 = "";
String[] node_tFileInputXML_1 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_1 = new org.talend.xml.sax.SAXLooper(context.xmlType,queryPaths_tFileInputXML_1,asXMLs_tFileInputXML_1);
looper_tFileInputXML_1.setEncoding("UTF-8");
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.xmlLocation;
} catch(java.lang.Exception e) {
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_1 instanceof java.io.InputStream){
	looper_tFileInputXML_1.parse((java.io.InputStream)filename_tFileInputXML_1);
}else{
	looper_tFileInputXML_1.parse(String.valueOf(filename_tFileInputXML_1));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_1  = looper_tFileInputXML_1.iterator();
while (it_tFileInputXML_1.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_1 = it_tFileInputXML_1.next();
		nb_line_tFileInputXML_1++;
		
	row1 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row1 = new row1Struct();
	try{
	str_tFileInputXML_1 = row_tFileInputXML_1.get(".");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("."+"/@xsi:nil")};	
										if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.content =null;
										}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1) || xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1)){
											row1.content=null;
										}else{
		row1.content = ParserUtils.parseTo_Document(str_tFileInputXML_1);
	} 
			
    } catch (java.lang.Exception e) {
        whetherReject_tFileInputXML_1 = true;
                System.err.println(e.getMessage());
                row1 = null;
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";

	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";

	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tXMLMap_3_TXMLMAP_OUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_OUT";

	

			//row1
			//row1


			
				
				if(execStat){
					runStat.updateStatOnConnection("row1"+iterateId,1, 1);
				}
				
				
				
			

		

	boolean rejectedInnerJoin_tXMLMap_3_TXMLMAP_OUT = false;
	boolean rejectedDocInnerJoin_tXMLMap_3_TXMLMAP_OUT = false;
	boolean mainRowRejected_tXMLMap_3_TXMLMAP_OUT = false;
	boolean isMatchDocRowtXMLMap_3_TXMLMAP_OUT = false;
	  
	
			

		
		
				//init document to flat tool
				routines.system.DocumentToFlat docToFlat_tXMLMap_3_TXMLMAP_OUT = new routines.system.DocumentToFlat();
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setOriginalLoop("/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/identificatie");
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setIsOptional(false);
				if(row1.content == null || row1.content.getDocument() == null) {
					throw new RuntimeException("row1.content can't be empty");
				}
				org.dom4j.Document doc_tXMLMap_3_TXMLMAP_OUT = row1.content.getDocument();
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setDoc(doc_tXMLMap_3_TXMLMAP_OUT);
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setDefineNS(false);
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setNamespaceTool(nsTool_tXMLMap_3_TXMLMAP_OUT);
				
					//old version, find NS from doc
					nsTool_tXMLMap_3_TXMLMAP_OUT.countNSMap(doc_tXMLMap_3_TXMLMAP_OUT.getRootElement());
					java.util.HashMap<String,String> xmlNameSpaceMap_tXMLMap_3_TXMLMAP_OUT = nsTool_tXMLMap_3_TXMLMAP_OUT.xmlNameSpaceMap;
				
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setXmlNameSpaceMap(xmlNameSpaceMap_tXMLMap_3_TXMLMAP_OUT);
				
				String[] absolutePathMappings_tXMLMap_3_TXMLMAP_OUT = new String[135];
				String[] relativePathMappings_tXMLMap_3_TXMLMAP_OUT = new String[135];
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[0] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[0] = "../postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[1] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/BAGIdentificatie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[1] = "../postlocatie/Standplaats/BAGIdentificatie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[2] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/BAGIdentificatie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[2] = "../woonlocatie/Standplaats/BAGIdentificatie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[3] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[3] = "../woonlocatie/Standplaats/hoofdadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[4] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/adres";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[4] = "../postlocatie/KADBuitenlandsAdres/adres";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[5] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[5] = "../postlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[6] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/beschikkingsbevoegdheid/code";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[6] = "../beschikkingsbevoegdheid/code";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[7] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[7] = "../postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[8] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/identificatie/versie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[8] = "versie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[9] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[9] = "../postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[10] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/woonplaats";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[10] = "../postlocatie/KADBuitenlandsAdres/woonplaats";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[11] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/land/code";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[11] = "../woonlocatie/BuitenlandsAdres/land/code";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[12] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[12] = "../woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[13] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[13] = "../postlocatie/Ligplaats/hoofdadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[14] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/BAGIdentificatie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[14] = "../postlocatie/Ligplaats/BAGIdentificatie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[15] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/beschikkingsbevoegdheid/waarde";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[15] = "../beschikkingsbevoegdheid/waarde";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[16] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[16] = "../woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[17] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/huisNummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[17] = "../postlocatie/KADBinnenlandsAdres/huisNummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[18] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[18] = "../postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[19] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[19] = "../woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[20] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[20] = "../postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[21] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[21] = "../postlocatie/Standplaats/nevenadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[22] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/naam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[22] = "../naam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[23] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[23] = "../postlocatie/KADBinnenlandsAdres/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[24] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[24] = "../postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[25] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[25] = "../woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[26] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/regio";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[26] = "../woonlocatie/BuitenlandsAdres/regio";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[27] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[27] = "../woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[28] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[28] = "../woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[29] = "row1.content:/KadastraalObjectSnapshot/referentie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[29] = "../../referentie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[30] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/@id";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[30] = "../@id";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[31] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/huisLetter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[31] = "../postlocatie/KADBinnenlandsAdres/huisLetter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[32] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[32] = "../woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[33] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[33] = "../woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[34] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[34] = "../woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[35] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/rechtsvorm/waarde";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[35] = "../rechtsvorm/waarde";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[36] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[36] = "../postlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[37] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[37] = "../woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[38] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/adres";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[38] = "../woonlocatie/BuitenlandsAdres/adres";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[39] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[39] = "../woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[40] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[40] = "../woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[41] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[41] = "../woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[42] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[42] = "../woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[43] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[43] = "../woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[44] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/BAGIdentificatie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[44] = "../woonlocatie/Verblijfsobject/BAGIdentificatie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[45] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[45] = "../postlocatie/Standplaats/hoofdadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[46] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/identificatie/namespace";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[46] = "namespace";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[47] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/BAGIdentificatie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[47] = "../postlocatie/Verblijfsobject/BAGIdentificatie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[48] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[48] = "../postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[49] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[49] = "../postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[50] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[50] = "../postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[51] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[51] = "../woonlocatie/KADBinnenlandsAdres/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[52] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[52] = "../woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[53] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/BAGIdentificatie";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[53] = "../woonlocatie/Ligplaats/BAGIdentificatie";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[54] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[54] = "../woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[55] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[55] = "../postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[56] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/regio";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[56] = "../postlocatie/KADBuitenlandsAdres/regio";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[57] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/statutaireZetel";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[57] = "../statutaireZetel";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[58] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[58] = "../postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[59] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[59] = "../postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[60] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/PostbusAdres/postbusnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[60] = "../postlocatie/PostbusAdres/postbusnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[61] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[61] = "../woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[62] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[62] = "../woonlocatie/KADBinnenlandsAdres/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[63] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/woonplaats";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[63] = "../postlocatie/BuitenlandsAdres/woonplaats";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[64] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[64] = "../woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[65] = "row1.content:/KadastraalObjectSnapshot/toestandsdatum";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[65] = "../../toestandsdatum";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[66] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[66] = "../postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[67] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[67] = "../postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[68] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[68] = "../woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[69] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[69] = "../woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[70] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[70] = "../woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[71] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/woonplaats";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[71] = "../woonlocatie/KADBuitenlandsAdres/woonplaats";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[72] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[72] = "../woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[73] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/huisNummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[73] = "../woonlocatie/KADBinnenlandsAdres/huisNummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[74] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[74] = "../postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[75] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[75] = "../postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[76] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/regio";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[76] = "../woonlocatie/KADBuitenlandsAdres/regio";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[77] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[77] = "../postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[78] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[78] = "../postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[79] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[79] = "../postlocatie/KADBinnenlandsAdres/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[80] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[80] = "../postlocatie/KADBinnenlandsAdres/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[81] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[81] = "../woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[82] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/PostbusAdres/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[82] = "../postlocatie/PostbusAdres/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[83] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[83] = "../woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[84] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[84] = "../woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[85] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[85] = "../woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[86] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[86] = "../postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[87] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/adres";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[87] = "../postlocatie/BuitenlandsAdres/adres";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[88] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[88] = "../woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[89] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[89] = "../woonlocatie/Ligplaats/nevenadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[90] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[90] = "../woonlocatie/Standplaats/nevenadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[91] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/rechtsvorm/code";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[91] = "../rechtsvorm/code";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[92] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[92] = "../postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[93] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[93] = "../woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[94] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[94] = "../woonlocatie/KADBinnenlandsAdres/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[95] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/huisLetter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[95] = "../woonlocatie/KADBinnenlandsAdres/huisLetter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[96] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[96] = "../postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[97] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[97] = "../woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[98] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[98] = "../woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[99] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[99] = "../postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[100] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[100] = "../woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[101] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/huisNummerToevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[101] = "../postlocatie/KADBinnenlandsAdres/huisNummerToevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[102] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/regio";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[102] = "../postlocatie/BuitenlandsAdres/regio";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[103] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[103] = "../woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[104] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[104] = "../postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[105] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/land";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[105] = "../postlocatie/KADBuitenlandsAdres/land";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[106] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/identificatie/lokaalId";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[106] = "lokaalId";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[107] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/adres";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[107] = "../woonlocatie/KADBuitenlandsAdres/adres";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[108] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[108] = "../postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[109] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[109] = "../postlocatie/Ligplaats/nevenadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[110] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[110] = "../woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[111] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[111] = "../postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[112] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[112] = "../postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[113] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[113] = "../postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[114] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/land/waarde";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[114] = "../woonlocatie/BuitenlandsAdres/land/waarde";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[115] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/huisNummerToevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[115] = "../woonlocatie/KADBinnenlandsAdres/huisNummerToevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[116] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[116] = "../postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[117] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/land/code";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[117] = "../postlocatie/BuitenlandsAdres/land/code";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[118] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[118] = "../woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[119] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[119] = "../postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[120] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[120] = "../postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[121] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/land";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[121] = "../woonlocatie/KADBuitenlandsAdres/land";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[122] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[122] = "../postlocatie/Standplaats/nevenadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[123] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/PostbusAdres/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[123] = "../postlocatie/PostbusAdres/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[124] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[124] = "../woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[125] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[125] = "../postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[126] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[126] = "../woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[127] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[127] = "../woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[128] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[128] = "../postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[129] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/land/waarde";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[129] = "../postlocatie/BuitenlandsAdres/land/waarde";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[130] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/postcode";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[130] = "../postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/postcode";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[131] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisletter";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[131] = "../postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisletter";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[132] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummer";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[132] = "../woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummer";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[133] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[133] = "../postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummertoevoeging";
				
				absolutePathMappings_tXMLMap_3_TXMLMAP_OUT[134] = "row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/woonplaats";
				relativePathMappings_tXMLMap_3_TXMLMAP_OUT[134] = "../woonlocatie/BuitenlandsAdres/woonplaats";
				
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setAbsolutePathMappings(absolutePathMappings_tXMLMap_3_TXMLMAP_OUT);
				docToFlat_tXMLMap_3_TXMLMAP_OUT.setCurrentRelativePathMappings(relativePathMappings_tXMLMap_3_TXMLMAP_OUT);
				//generate document to flat data
				docToFlat_tXMLMap_3_TXMLMAP_OUT.flat();
				//get flat data
				java.util.List<java.util.Map<String, String>> resultSet_tXMLMap_3_TXMLMAP_OUT = docToFlat_tXMLMap_3_TXMLMAP_OUT.getResultSet();
				
				for (java.util.Map<String,String> oneRow_tXMLMap_3_TXMLMAP_OUT: resultSet_tXMLMap_3_TXMLMAP_OUT) { // G_TXM_M_001
					nb_line_tXMLMap_3_TXMLMAP_OUT++;
			    	rejectedInnerJoin_tXMLMap_3_TXMLMAP_OUT = false;
			    	rejectedDocInnerJoin_tXMLMap_3_TXMLMAP_OUT = false;
					mainRowRejected_tXMLMap_3_TXMLMAP_OUT=false;
				    isMatchDocRowtXMLMap_3_TXMLMAP_OUT = false;
					
			    	treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.clear();
			    	for(java.util.Map.Entry<String, String> entry_tXMLMap_3_TXMLMAP_OUT : oneRow_tXMLMap_3_TXMLMAP_OUT.entrySet()) {
						treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.put(entry_tXMLMap_3_TXMLMAP_OUT.getKey(),entry_tXMLMap_3_TXMLMAP_OUT.getValue());
					}
					


			
{ // start of Var scope

	// ###############################
	// # Vars tables

Var__tXMLMap_3_TXMLMAP_OUT__Struct Var = Var__tXMLMap_3_TXMLMAP_OUT;
		// ###############################
		// # Output tables

out1 = null;


// # Output table : 'out1'

out1_tmp = new out1Struct();
out1_tmp.kdoreferentie = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/referentie");
out1_tmp.toestandsdatum = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/toestandsdatum") ;
out1_tmp.kadnnpid = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/@id");
out1_tmp.kadnnpidnamespace = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/identificatie/namespace");
out1_tmp.kadnnpidlokaalid = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/identificatie/lokaalId");
out1_tmp.kadnnpidversie = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/identificatie/versie");
out1_tmp.kadnnpbeschikkingbevoegdheidcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/beschikkingsbevoegdheid/code");
out1_tmp.kadnnpbeschikkingbevoegdheidwaarde = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/beschikkingsbevoegdheid/waarde");
out1_tmp.kadnnppostlocatiekadbinadresopenbareruimtenaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/openbareRuimteNaam");
out1_tmp.kadnnppostlocatiekadbinadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/huisLetter");
out1_tmp.kadnnppostlocatiekadbinadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/huisNummer");
out1_tmp.kadnnppostlocatiekadbinadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/huisNummerToevoeging");
out1_tmp.kadnnppostlocatiekadbinadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/postcode");
out1_tmp.kadnnppostlocatiekadbinadreswoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBinnenlandsAdres/woonplaatsNaam");
out1_tmp.kadnnppostlocatievbobagidentificatie = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/BAGIdentificatie");
out1_tmp.kadnnppostlocatievbohoofdadrnumaandhuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnppostlocatievbohoofdadrnumaandhuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisletter");
out1_tmp.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnppostlocatievbohoofdadrnumaandpostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/postcode");
out1_tmp.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatienevenadrhuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnppostlocatienevenadrhuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisletter");
out1_tmp.kadnnppostlocatienevenadrhuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnppostlocatienevenadrpostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/postcode");
out1_tmp.kadnnppostlocatienevenadrgerwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatienevenadrgeropenbareruimtenaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnppostlocatienevenadroprgerwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatiestandplaatsbagid = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/BAGIdentificatie");
out1_tmp.kadnnppostlocatiestandplaatshfdadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnppostlocatiestandplaatshfdadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisletter");
out1_tmp.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnppostlocatiestandplaatshfdadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/postcode");
out1_tmp.kadnnppostlocatiestandplaatshfdadresgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatiestandplaatshfdadresgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatiestandplaatsnevadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnppostlocatiestandplaatsnevadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/huisletter");
out1_tmp.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnppostlocatiestandplaatsnevadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/postcode");
out1_tmp.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatiestandplaatsnevadresgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatieligplaatshfdadresbagid = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/BAGIdentificatie");
out1_tmp.kadnnppostlocatieligplaatshfdadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnppostlocatieligplaatshfdadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisletter");
out1_tmp.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnppostlocatieligplaatshfdadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/postcode");
out1_tmp.kadnnppostlocatieligplaatshfdadreswplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatieligplaatshfdadresgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnppostlocatieligplaatshfdadresoprgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatieligplaatsnevadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnppostlocatieligplaatsnevadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisletter");
out1_tmp.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnppostlocatieligplaatsnevadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/postcode");
out1_tmp.kadnnppostlocatieligplaatsnevadresgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatieligplaatsnevadresgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnppostlocatiekadbuitenlandsadres = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/adres");
out1_tmp.kadnnppostlocatiekadbuitenlandsadreswoonplaats = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/woonplaats");
out1_tmp.kadnnppostlocatiekadbuitenlandsadresregio = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/regio");
out1_tmp.kadnnppostlocatiekadbuitenlandsadresland = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/KADBuitenlandsAdres/land");
out1_tmp.kadnnppostlocatiebuitenlandsadres = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/adres");
out1_tmp.kadnnppostlocatiebuitenlandsadreswoonplaats = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/woonplaats");
out1_tmp.kadnnppostlocatiebuitenlandsadresregio = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/regio");
out1_tmp.kadnnppostlocatiebuitenlandsadreslandcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/land/code");
out1_tmp.kadnnppostlocatiebuitenlandsadreslandwaarde = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/BuitenlandsAdres/land/waarde");
out1_tmp.kadnnppostlocatiepostbusadrespostbusnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/PostbusAdres/postbusnummer");
out1_tmp.kadnnppostlocatiepostbusadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/PostbusAdres/postcode");
out1_tmp.kadnnppostlocatiepostbusadreswoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/postlocatie/PostbusAdres/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatiebuitladres = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/adres");
out1_tmp.kadnnpwoonlocatiebuitladreswoonplaats = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/woonplaats");
out1_tmp.kadnnpwoonlocatiebuitladresregio = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/regio");
out1_tmp.kadnnpwoonlocatiebuitladreslandcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/land/code");
out1_tmp.kadnnpwoonlocatiebuitladreslandwaarde = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/BuitenlandsAdres/land/waarde");
out1_tmp.kadnnpwoonlocatiekadbuitladres = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/adres");
out1_tmp.kadnnpwoonlocatiekadbuitladreswoonplaats = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/woonplaats");
out1_tmp.kadnnpwoonlocatiekadbuitladresregio = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/regio");
out1_tmp.kadnnpwoonlocatiekadbuitladresland = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBuitenlandsAdres/land");
out1_tmp.kadnnpwoonlocatieligplaatsbagid = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/BAGIdentificatie");
out1_tmp.kadnnpwoonlocatieligplaatshfdadrhuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnpwoonlocatieligplaatshfdadrhuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisletter");
out1_tmp.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnpwoonlocatieligplaatshfdadrpostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/postcode");
out1_tmp.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatieligplaatshfdadrgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatieligplaatsnevadrhuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnpwoonlocatieligplaatsnevadrhuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisletter");
out1_tmp.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnpwoonlocatieligplaatsnevadrpostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/postcode");
out1_tmp.kadnnpwoonlocatieligplaatsnevadrgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatieligplaatsnevadroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Ligplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatiestandplaatsbagid = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/BAGIdentificatie");
out1_tmp.kadnnpwoonlocatiestandplaatshfdadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnpwoonlocatiestandplaatshfdadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisletter");
out1_tmp.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnpwoonlocatiestandplaatshfdadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/postcode");
out1_tmp.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatiestandplaatsnevadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnpwoonlocatiestandplaatsnevadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisletter");
out1_tmp.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnpwoonlocatiestandplaatsnevadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/postcode");
out1_tmp.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Standplaats/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatievbobagid = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/BAGIdentificatie");
out1_tmp.kadnnpwoonlocatievbohfdadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnpwoonlocatievbohfdadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisletter");
out1_tmp.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnpwoonlocatievbohfdadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/postcode");
out1_tmp.kadnnpwoonlocatievbohfdadreswplaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatievbohfdadresoprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnpwoonlocatievbohfdadresoprgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/hoofdadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatievbonevadreshuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummer");
out1_tmp.kadnnpwoonlocatievbonevadreshuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisletter");
out1_tmp.kadnnpwoonlocatievbonevadreshuisnumoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/huisnummertoevoeging");
out1_tmp.kadnnpwoonlocatievbonevadrespostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/postcode");
out1_tmp.kadnnpwoonlocatievbonevadresgerwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatievbonevadresgeroprnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/openbareRuimteNaam");
out1_tmp.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/Verblijfsobject/nevenadres/NummerAanduiding/gerelateerdeOpenbareRuimte/OpenbareRuimte/gerelateerdeWoonplaats/Woonplaats/woonplaatsNaam");
out1_tmp.kadnnpwoonlocatiekadbinadropenbareruimtenaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/openbareRuimteNaam");
out1_tmp.kadnnpwoonlocatiekadbinadrhuisletter = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/huisLetter");
out1_tmp.kadnnpwoonlocatiekadbinadrhuisnummer = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/huisNummer");
out1_tmp.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/huisNummerToevoeging");
out1_tmp.kadnnpwoonlocatiekadbinadrpostcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/postcode");
out1_tmp.kadnnpwoonlocatiekadbinadrwplnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/woonlocatie/KADBinnenlandsAdres/woonplaatsNaam");
out1_tmp.kadnnpnaam = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/naam");
out1_tmp.kadnnprechtsvormcode = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/rechtsvorm/code");
out1_tmp.kadnnprechtsvormwaarde = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/rechtsvorm/waarde");
out1_tmp.kadnnpstatutairezetel = treeNodeAPI_tXMLMap_3_TXMLMAP_OUT.get_String("row1.content:/KadastraalObjectSnapshot/KADNietNatuurlijkPersoon/statutaireZetel");allOutsForAggregate_tXMLMap_3.add(out1_tmp);

// ###############################

} // end of Var scope

rejectedInnerJoin_tXMLMap_3_TXMLMAP_OUT = false;


		}//G_TXM_M_001 close
	

 


	tos_count_tXMLMap_3_TXMLMAP_OUT++;

/**
 * [tXMLMap_3_TXMLMAP_OUT main ] stop
 */
	
	/**
	 * [tXMLMap_3_TXMLMAP_OUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_OUT";

	

 



/**
 * [tXMLMap_3_TXMLMAP_OUT process_data_begin ] stop
 */
	
	/**
	 * [tXMLMap_3_TXMLMAP_OUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_OUT";

	

 



/**
 * [tXMLMap_3_TXMLMAP_OUT process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";

	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";

	


	}
	try {
		looper_tFileInputXML_1.handleTaskResponse();
	} catch(java.lang.Exception e) {
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		
		System.err.println(e.getMessage());	
	
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	
 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tXMLMap_3_TXMLMAP_OUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_OUT";

	




			
			if(execStat){
				if(resourceMap.get("inIterateVComp") == null || !((Boolean)resourceMap.get("inIterateVComp"))){
	 				runStat.updateStatOnConnection("row1"+iterateId,2, 0);
			 	}
			}
			
			
			
		
 

ok_Hash.put("tXMLMap_3_TXMLMAP_OUT", true);
end_Hash.put("tXMLMap_3_TXMLMAP_OUT", System.currentTimeMillis());




/**
 * [tXMLMap_3_TXMLMAP_OUT end ] stop
 */


	
	/**
	 * [tPostgresPlusOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostgresPlusOutput_1", false);
		start_Hash.put("tPostgresPlusOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tPostgresPlusOutput_1";

	
			if (execStat) {
				if(resourceMap.get("inIterateVComp") == null){
					
						
						if(execStat) {
							runStat.updateStatOnConnection("out1"+iterateId, 0, 0);
						}
						
						
						
					
				}
			} 

		
		int tos_count_tPostgresPlusOutput_1 = 0;
		
	





String dbschema_tPostgresPlusOutput_1 = null;
	dbschema_tPostgresPlusOutput_1 = (String)globalMap.get("schema_" + "tPostgresPlusConnection_1");
	

String tableName_tPostgresPlusOutput_1 = null;
if(dbschema_tPostgresPlusOutput_1 == null || dbschema_tPostgresPlusOutput_1.trim().length() == 0) {
	tableName_tPostgresPlusOutput_1 = "brk_kadnnp";
} else {
	tableName_tPostgresPlusOutput_1 = dbschema_tPostgresPlusOutput_1 + "\".\"" + "brk_kadnnp";
}

int nb_line_tPostgresPlusOutput_1 = 0;
int nb_line_update_tPostgresPlusOutput_1 = 0;
int nb_line_inserted_tPostgresPlusOutput_1 = 0;
int nb_line_deleted_tPostgresPlusOutput_1 = 0;
int nb_line_rejected_tPostgresPlusOutput_1 = 0;

int deletedCount_tPostgresPlusOutput_1=0;
int updatedCount_tPostgresPlusOutput_1=0;
int insertedCount_tPostgresPlusOutput_1=0;
int rejectedCount_tPostgresPlusOutput_1=0;

boolean whetherReject_tPostgresPlusOutput_1 = false;


java.sql.Connection conn_tPostgresPlusOutput_1 = null;
	conn_tPostgresPlusOutput_1 = (java.sql.Connection)globalMap.get("conn_tPostgresPlusConnection_1");
	
	

            java.sql.DatabaseMetaData dbMetaData_tPostgresPlusOutput_1 = conn_tPostgresPlusOutput_1.getMetaData();
            boolean whetherExist_tPostgresPlusOutput_1 = false;
            String defaultSchema_tPostgresPlusOutput_1 = "public";
            try (java.sql.ResultSet rsTable_tPostgresPlusOutput_1 = dbMetaData_tPostgresPlusOutput_1.getTables(null, null, null, new String[]{"TABLE"})) {
                if(dbschema_tPostgresPlusOutput_1 == null || dbschema_tPostgresPlusOutput_1.trim().length() == 0) {
                    try (java.sql.Statement stmtSchema_tPostgresPlusOutput_1 = conn_tPostgresPlusOutput_1.createStatement();
                            java.sql.ResultSet rsSchema_tPostgresPlusOutput_1 = stmtSchema_tPostgresPlusOutput_1.executeQuery("select current_schema() ")) {
                        while(rsSchema_tPostgresPlusOutput_1.next()){
                            defaultSchema_tPostgresPlusOutput_1 = rsSchema_tPostgresPlusOutput_1.getString("current_schema");
                        }
                    }
                }
                while(rsTable_tPostgresPlusOutput_1.next()) {
                    String table_tPostgresPlusOutput_1 = rsTable_tPostgresPlusOutput_1.getString("TABLE_NAME");
                    String schema_tPostgresPlusOutput_1 = rsTable_tPostgresPlusOutput_1.getString("TABLE_SCHEM");
                    if(table_tPostgresPlusOutput_1.equals("brk_kadnnp")
                        && (schema_tPostgresPlusOutput_1.equals(dbschema_tPostgresPlusOutput_1) || ((dbschema_tPostgresPlusOutput_1 == null || dbschema_tPostgresPlusOutput_1.trim().length() ==0) && defaultSchema_tPostgresPlusOutput_1.equals(schema_tPostgresPlusOutput_1)))) {
                        whetherExist_tPostgresPlusOutput_1 = true;
                        break;
                    }
                }
            }
                if(!whetherExist_tPostgresPlusOutput_1) {
                    try (java.sql.Statement stmtCreate_tPostgresPlusOutput_1 = conn_tPostgresPlusOutput_1.createStatement()) {
                        stmtCreate_tPostgresPlusOutput_1.execute("CREATE TABLE \"" + tableName_tPostgresPlusOutput_1 + "\"(\"kdoreferentie\" VARCHAR(999)  ,\"toestandsdatum\" VARCHAR(999)  ,\"kadnnpid\" VARCHAR(999)  ,\"kadnnpidnamespace\" VARCHAR(999)  ,\"kadnnpidlokaalid\" VARCHAR(999)  ,\"kadnnpidversie\" VARCHAR(999)  ,\"kadnnpbeschikkingbevoegdheidcode\" VARCHAR(999)  ,\"kadnnpbeschikkingbevoegdheidwaarde\" VARCHAR(999)  ,\"kadnnppostlocatiekadbinadresopenbareruimtenaam\" VARCHAR(999)  ,\"kadnnppostlocatiekadbinadreshuisletter\" VARCHAR(999)  ,\"kadnnppostlocatiekadbinadreshuisnummer\" VARCHAR(999)  ,\"kadnnppostlocatiekadbinadreshuisnumtoevoeg\" VARCHAR(999)  ,\"kadnnppostlocatiekadbinadrespostcode\" VARCHAR(999)  ,\"kadnnppostlocatiekadbinadreswoonplaatsnaam\" VARCHAR(999)  ,\"kadnnppostlocatievbobagidentificatie\" VARCHAR(999)  ,\"kadnnppostlocatievbohoofdadrnumaandhuisnummer\" VARCHAR(999)  ,\"kadnnppostlocatievbohoofdadrnumaandhuisletter\" VARCHAR(999)  ,\"kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg\" VARCHAR(999)  ,\"kadnnppostlocatievbohoofdadrnumaandpostcode\" VARCHAR(999)  ,\"kadnnppostlocatievbohoofdadrnumaandgerelawplnaam\" VARCHAR(999)  ,\"kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam\" VARCHAR(999)  ,\"kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam\" VARCHAR(999)  ,\"kadnnppostlocatienevenadrhuisnummer\" VARCHAR(999)  ,\"kadnnppostlocatienevenadrhuisletter\" VARCHAR(999)  ,\"kadnnppostlocatienevenadrhuisnumtoevoeg\" VARCHAR(999)  ,\"kadnnppostlocatienevenadrpostcode\" VARCHAR(999)  ,\"kadnnppostlocatienevenadrgerwoonplaatsnaam\" VARCHAR(999)  ,\"kadnnppostlocatienevenadrgeropenbareruimtenaam\" VARCHAR(999)  ,\"kadnnppostlocatienevenadroprgerwoonplaatsnaam\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsbagid\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatshfdadreshuisnummer\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatshfdadreshuisletter\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatshfdadrespostcode\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatshfdadresgerwplnaam\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatshfdadresgeroprnaam\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsnevadreshuisnummer\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsnevadreshuisletter\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsnevadrespostcode\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsnevadresgeroprnaam\" VARCHAR(999)  ,\"kadnnppostlocatiestandplaatsnevadresoprgerwplnaam\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadresbagid\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadreshuisnummer\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadreshuisletter\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadrespostcode\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadreswplnaam\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadresgeroprnaam\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatshfdadresoprgerwplnaam\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatsnevadreshuisnummer\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatsnevadreshuisletter\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatsnevadrespostcode\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatsnevadresgerwplnaam\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatsnevadresgeroprnaam\" VARCHAR(999)  ,\"kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam\" VARCHAR(999)  ,\"kadnnppostlocatiekadbuitenlandsadres\" VARCHAR(999)  ,\"kadnnppostlocatiekadbuitenlandsadreswoonplaats\" VARCHAR ,\"kadnnppostlocatiekadbuitenlandsadresregio\" VARCHAR ,\"kadnnppostlocatiekadbuitenlandsadresland\" VARCHAR ,\"kadnnppostlocatiebuitenlandsadres\" VARCHAR ,\"kadnnppostlocatiebuitenlandsadreswoonplaats\" VARCHAR ,\"kadnnppostlocatiebuitenlandsadresregio\" VARCHAR ,\"kadnnppostlocatiebuitenlandsadreslandcode\" VARCHAR ,\"kadnnppostlocatiebuitenlandsadreslandwaarde\" VARCHAR ,\"kadnnppostlocatiepostbusadrespostbusnummer\" VARCHAR ,\"kadnnppostlocatiepostbusadrespostcode\" VARCHAR ,\"kadnnppostlocatiepostbusadreswoonplaatsnaam\" VARCHAR ,\"kadnnpwoonlocatiebuitladres\" VARCHAR ,\"kadnnpwoonlocatiebuitladreswoonplaats\" VARCHAR ,\"kadnnpwoonlocatiebuitladresregio\" VARCHAR ,\"kadnnpwoonlocatiebuitladreslandcode\" VARCHAR ,\"kadnnpwoonlocatiebuitladreslandwaarde\" VARCHAR ,\"kadnnpwoonlocatiekadbuitladres\" VARCHAR ,\"kadnnpwoonlocatiekadbuitladreswoonplaats\" VARCHAR ,\"kadnnpwoonlocatiekadbuitladresregio\" VARCHAR ,\"kadnnpwoonlocatiekadbuitladresland\" VARCHAR ,\"kadnnpwoonlocatieligplaatsbagid\" VARCHAR ,\"kadnnpwoonlocatieligplaatshfdadrhuisnummer\" VARCHAR ,\"kadnnpwoonlocatieligplaatshfdadrhuisletter\" VARCHAR ,\"kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg\" VARCHAR ,\"kadnnpwoonlocatieligplaatshfdadrpostcode\" VARCHAR ,\"kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam\" VARCHAR ,\"kadnnpwoonlocatieligplaatshfdadrgeroprnaam\" VARCHAR ,\"kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam\" VARCHAR ,\"kadnnpwoonlocatieligplaatsnevadrhuisnummer\" VARCHAR ,\"kadnnpwoonlocatieligplaatsnevadrhuisletter\" VARCHAR ,\"kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg\" VARCHAR ,\"kadnnpwoonlocatieligplaatsnevadrpostcode\" VARCHAR ,\"kadnnpwoonlocatieligplaatsnevadrgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatieligplaatsnevadroprnaam\" VARCHAR ,\"kadnnpwoonlocatieligplaatsnevadroprgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsbagid\" VARCHAR ,\"kadnnpwoonlocatiestandplaatshfdadreshuisnummer\" VARCHAR ,\"kadnnpwoonlocatiestandplaatshfdadreshuisletter\" VARCHAR ,\"kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg\" VARCHAR ,\"kadnnpwoonlocatiestandplaatshfdadrespostcode\" VARCHAR ,\"kadnnpwoonlocatiestandplaatshfdadresgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatiestandplaatshfdadresgeroprnaam\" VARCHAR ,\"kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsnevadreshuisnummer\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsnevadreshuisletter\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsnevadrespostcode\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsnevadresgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsnevadresgeroprnaam\" VARCHAR ,\"kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatievbobagid\" VARCHAR ,\"kadnnpwoonlocatievbohfdadreshuisnummer\" VARCHAR ,\"kadnnpwoonlocatievbohfdadreshuisletter\" VARCHAR ,\"kadnnpwoonlocatievbohfdadreshuisnumtoevoeg\" VARCHAR ,\"kadnnpwoonlocatievbohfdadrespostcode\" VARCHAR ,\"kadnnpwoonlocatievbohfdadreswplaam\" VARCHAR ,\"kadnnpwoonlocatievbohfdadresoprnaam\" VARCHAR ,\"kadnnpwoonlocatievbohfdadresoprgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatievbonevadreshuisnummer\" VARCHAR ,\"kadnnpwoonlocatievbonevadreshuisletter\" VARCHAR ,\"kadnnpwoonlocatievbonevadreshuisnumoevoeg\" VARCHAR ,\"kadnnpwoonlocatievbonevadrespostcode\" VARCHAR ,\"kadnnpwoonlocatievbonevadresgerwplnaam\" VARCHAR ,\"kadnnpwoonlocatievbonevadresgeroprnaam\" VARCHAR ,\"kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam\" VARCHAR ,\"kadnnpwoonlocatiekadbinadropenbareruimtenaam\" VARCHAR ,\"kadnnpwoonlocatiekadbinadrhuisletter\" VARCHAR ,\"kadnnpwoonlocatiekadbinadrhuisnummer\" VARCHAR ,\"kadnnpwoonlocatiekadbinadrhuisnumtoevoeg\" VARCHAR ,\"kadnnpwoonlocatiekadbinadrpostcode\" VARCHAR ,\"kadnnpwoonlocatiekadbinadrwplnaam\" VARCHAR ,\"kadnnpnaam\" VARCHAR ,\"kadnnprechtsvormcode\" VARCHAR ,\"kadnnprechtsvormwaarde\" VARCHAR ,\"kadnnpstatutairezetel\" VARCHAR ,primary key(\"kadnnpid\"))");
                    }
                }
	    String insert_tPostgresPlusOutput_1 = "INSERT INTO \"" + tableName_tPostgresPlusOutput_1 + "\" (\"kdoreferentie\",\"toestandsdatum\",\"kadnnpid\",\"kadnnpidnamespace\",\"kadnnpidlokaalid\",\"kadnnpidversie\",\"kadnnpbeschikkingbevoegdheidcode\",\"kadnnpbeschikkingbevoegdheidwaarde\",\"kadnnppostlocatiekadbinadresopenbareruimtenaam\",\"kadnnppostlocatiekadbinadreshuisletter\",\"kadnnppostlocatiekadbinadreshuisnummer\",\"kadnnppostlocatiekadbinadreshuisnumtoevoeg\",\"kadnnppostlocatiekadbinadrespostcode\",\"kadnnppostlocatiekadbinadreswoonplaatsnaam\",\"kadnnppostlocatievbobagidentificatie\",\"kadnnppostlocatievbohoofdadrnumaandhuisnummer\",\"kadnnppostlocatievbohoofdadrnumaandhuisletter\",\"kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg\",\"kadnnppostlocatievbohoofdadrnumaandpostcode\",\"kadnnppostlocatievbohoofdadrnumaandgerelawplnaam\",\"kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam\",\"kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam\",\"kadnnppostlocatienevenadrhuisnummer\",\"kadnnppostlocatienevenadrhuisletter\",\"kadnnppostlocatienevenadrhuisnumtoevoeg\",\"kadnnppostlocatienevenadrpostcode\",\"kadnnppostlocatienevenadrgerwoonplaatsnaam\",\"kadnnppostlocatienevenadrgeropenbareruimtenaam\",\"kadnnppostlocatienevenadroprgerwoonplaatsnaam\",\"kadnnppostlocatiestandplaatsbagid\",\"kadnnppostlocatiestandplaatshfdadreshuisnummer\",\"kadnnppostlocatiestandplaatshfdadreshuisletter\",\"kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg\",\"kadnnppostlocatiestandplaatshfdadrespostcode\",\"kadnnppostlocatiestandplaatshfdadresgerwplnaam\",\"kadnnppostlocatiestandplaatshfdadresgeroprnaam\",\"kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam\",\"kadnnppostlocatiestandplaatsnevadreshuisnummer\",\"kadnnppostlocatiestandplaatsnevadreshuisletter\",\"kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg\",\"kadnnppostlocatiestandplaatsnevadrespostcode\",\"kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam\",\"kadnnppostlocatiestandplaatsnevadresgeroprnaam\",\"kadnnppostlocatiestandplaatsnevadresoprgerwplnaam\",\"kadnnppostlocatieligplaatshfdadresbagid\",\"kadnnppostlocatieligplaatshfdadreshuisnummer\",\"kadnnppostlocatieligplaatshfdadreshuisletter\",\"kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg\",\"kadnnppostlocatieligplaatshfdadrespostcode\",\"kadnnppostlocatieligplaatshfdadreswplnaam\",\"kadnnppostlocatieligplaatshfdadresgeroprnaam\",\"kadnnppostlocatieligplaatshfdadresoprgerwplnaam\",\"kadnnppostlocatieligplaatsnevadreshuisnummer\",\"kadnnppostlocatieligplaatsnevadreshuisletter\",\"kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg\",\"kadnnppostlocatieligplaatsnevadrespostcode\",\"kadnnppostlocatieligplaatsnevadresgerwplnaam\",\"kadnnppostlocatieligplaatsnevadresgeroprnaam\",\"kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam\",\"kadnnppostlocatiekadbuitenlandsadres\",\"kadnnppostlocatiekadbuitenlandsadreswoonplaats\",\"kadnnppostlocatiekadbuitenlandsadresregio\",\"kadnnppostlocatiekadbuitenlandsadresland\",\"kadnnppostlocatiebuitenlandsadres\",\"kadnnppostlocatiebuitenlandsadreswoonplaats\",\"kadnnppostlocatiebuitenlandsadresregio\",\"kadnnppostlocatiebuitenlandsadreslandcode\",\"kadnnppostlocatiebuitenlandsadreslandwaarde\",\"kadnnppostlocatiepostbusadrespostbusnummer\",\"kadnnppostlocatiepostbusadrespostcode\",\"kadnnppostlocatiepostbusadreswoonplaatsnaam\",\"kadnnpwoonlocatiebuitladres\",\"kadnnpwoonlocatiebuitladreswoonplaats\",\"kadnnpwoonlocatiebuitladresregio\",\"kadnnpwoonlocatiebuitladreslandcode\",\"kadnnpwoonlocatiebuitladreslandwaarde\",\"kadnnpwoonlocatiekadbuitladres\",\"kadnnpwoonlocatiekadbuitladreswoonplaats\",\"kadnnpwoonlocatiekadbuitladresregio\",\"kadnnpwoonlocatiekadbuitladresland\",\"kadnnpwoonlocatieligplaatsbagid\",\"kadnnpwoonlocatieligplaatshfdadrhuisnummer\",\"kadnnpwoonlocatieligplaatshfdadrhuisletter\",\"kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg\",\"kadnnpwoonlocatieligplaatshfdadrpostcode\",\"kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam\",\"kadnnpwoonlocatieligplaatshfdadrgeroprnaam\",\"kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam\",\"kadnnpwoonlocatieligplaatsnevadrhuisnummer\",\"kadnnpwoonlocatieligplaatsnevadrhuisletter\",\"kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg\",\"kadnnpwoonlocatieligplaatsnevadrpostcode\",\"kadnnpwoonlocatieligplaatsnevadrgerwplnaam\",\"kadnnpwoonlocatieligplaatsnevadroprnaam\",\"kadnnpwoonlocatieligplaatsnevadroprgerwplnaam\",\"kadnnpwoonlocatiestandplaatsbagid\",\"kadnnpwoonlocatiestandplaatshfdadreshuisnummer\",\"kadnnpwoonlocatiestandplaatshfdadreshuisletter\",\"kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg\",\"kadnnpwoonlocatiestandplaatshfdadrespostcode\",\"kadnnpwoonlocatiestandplaatshfdadresgerwplnaam\",\"kadnnpwoonlocatiestandplaatshfdadresgeroprnaam\",\"kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam\",\"kadnnpwoonlocatiestandplaatsnevadreshuisnummer\",\"kadnnpwoonlocatiestandplaatsnevadreshuisletter\",\"kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg\",\"kadnnpwoonlocatiestandplaatsnevadrespostcode\",\"kadnnpwoonlocatiestandplaatsnevadresgerwplnaam\",\"kadnnpwoonlocatiestandplaatsnevadresgeroprnaam\",\"kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam\",\"kadnnpwoonlocatievbobagid\",\"kadnnpwoonlocatievbohfdadreshuisnummer\",\"kadnnpwoonlocatievbohfdadreshuisletter\",\"kadnnpwoonlocatievbohfdadreshuisnumtoevoeg\",\"kadnnpwoonlocatievbohfdadrespostcode\",\"kadnnpwoonlocatievbohfdadreswplaam\",\"kadnnpwoonlocatievbohfdadresoprnaam\",\"kadnnpwoonlocatievbohfdadresoprgerwplnaam\",\"kadnnpwoonlocatievbonevadreshuisnummer\",\"kadnnpwoonlocatievbonevadreshuisletter\",\"kadnnpwoonlocatievbonevadreshuisnumoevoeg\",\"kadnnpwoonlocatievbonevadrespostcode\",\"kadnnpwoonlocatievbonevadresgerwplnaam\",\"kadnnpwoonlocatievbonevadresgeroprnaam\",\"kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam\",\"kadnnpwoonlocatiekadbinadropenbareruimtenaam\",\"kadnnpwoonlocatiekadbinadrhuisletter\",\"kadnnpwoonlocatiekadbinadrhuisnummer\",\"kadnnpwoonlocatiekadbinadrhuisnumtoevoeg\",\"kadnnpwoonlocatiekadbinadrpostcode\",\"kadnnpwoonlocatiekadbinadrwplnaam\",\"kadnnpnaam\",\"kadnnprechtsvormcode\",\"kadnnprechtsvormwaarde\",\"kadnnpstatutairezetel\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	    java.sql.PreparedStatement pstmt_tPostgresPlusOutput_1 = conn_tPostgresPlusOutput_1.prepareStatement(insert_tPostgresPlusOutput_1);
	    resourceMap.put("pstmt_tPostgresPlusOutput_1", pstmt_tPostgresPlusOutput_1);
	    

 



/**
 * [tPostgresPlusOutput_1 begin ] stop
 */



	
	/**
	 * [tXMLMap_3_TXMLMAP_IN begin ] start
	 */

	

	
		
		ok_Hash.put("tXMLMap_3_TXMLMAP_IN", false);
		start_Hash.put("tXMLMap_3_TXMLMAP_IN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_IN";

	
		int tos_count_tXMLMap_3_TXMLMAP_IN = 0;
		
java.util.List<Object> outs_tXMLMap_3 = (java.util.List<Object>)globalMap.get("allOutsForAggregate_tXMLMap_3");
for(Object  row_out_tXMLMap_3_TXMLMAP_IN : outs_tXMLMap_3) {//TD512
 



/**
 * [tXMLMap_3_TXMLMAP_IN begin ] stop
 */
	
	/**
	 * [tXMLMap_3_TXMLMAP_IN main ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_IN";

	

	out1 = null;
	if(row_out_tXMLMap_3_TXMLMAP_IN!=null && row_out_tXMLMap_3_TXMLMAP_IN instanceof out1Struct) {
		out1 = (out1Struct)row_out_tXMLMap_3_TXMLMAP_IN;		
	}
 


	tos_count_tXMLMap_3_TXMLMAP_IN++;

/**
 * [tXMLMap_3_TXMLMAP_IN main ] stop
 */
	
	/**
	 * [tXMLMap_3_TXMLMAP_IN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_IN";

	

 



/**
 * [tXMLMap_3_TXMLMAP_IN process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tPostgresPlusOutput_1 main ] start
	 */

	

	
	
	currentComponent="tPostgresPlusOutput_1";

	

			//out1
			//out1


			
				
				if(execStat){
					runStat.updateStatOnConnection("out1"+iterateId,1, 1);
				}
				
				
				
			

		
	



        whetherReject_tPostgresPlusOutput_1 = false;
                    if(out1.kdoreferentie == null) {
pstmt_tPostgresPlusOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(1, out1.kdoreferentie);
}

                    if(out1.toestandsdatum == null) {
pstmt_tPostgresPlusOutput_1.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(2, out1.toestandsdatum);
}

                    if(out1.kadnnpid == null) {
pstmt_tPostgresPlusOutput_1.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(3, out1.kadnnpid);
}

                    if(out1.kadnnpidnamespace == null) {
pstmt_tPostgresPlusOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(4, out1.kadnnpidnamespace);
}

                    if(out1.kadnnpidlokaalid == null) {
pstmt_tPostgresPlusOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(5, out1.kadnnpidlokaalid);
}

                    if(out1.kadnnpidversie == null) {
pstmt_tPostgresPlusOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(6, out1.kadnnpidversie);
}

                    if(out1.kadnnpbeschikkingbevoegdheidcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(7, out1.kadnnpbeschikkingbevoegdheidcode);
}

                    if(out1.kadnnpbeschikkingbevoegdheidwaarde == null) {
pstmt_tPostgresPlusOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(8, out1.kadnnpbeschikkingbevoegdheidwaarde);
}

                    if(out1.kadnnppostlocatiekadbinadresopenbareruimtenaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(9, out1.kadnnppostlocatiekadbinadresopenbareruimtenaam);
}

                    if(out1.kadnnppostlocatiekadbinadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(10, out1.kadnnppostlocatiekadbinadreshuisletter);
}

                    if(out1.kadnnppostlocatiekadbinadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(11, out1.kadnnppostlocatiekadbinadreshuisnummer);
}

                    if(out1.kadnnppostlocatiekadbinadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(12, out1.kadnnppostlocatiekadbinadreshuisnumtoevoeg);
}

                    if(out1.kadnnppostlocatiekadbinadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(13, out1.kadnnppostlocatiekadbinadrespostcode);
}

                    if(out1.kadnnppostlocatiekadbinadreswoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(14, out1.kadnnppostlocatiekadbinadreswoonplaatsnaam);
}

                    if(out1.kadnnppostlocatievbobagidentificatie == null) {
pstmt_tPostgresPlusOutput_1.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(15, out1.kadnnppostlocatievbobagidentificatie);
}

                    if(out1.kadnnppostlocatievbohoofdadrnumaandhuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(16, out1.kadnnppostlocatievbohoofdadrnumaandhuisnummer);
}

                    if(out1.kadnnppostlocatievbohoofdadrnumaandhuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(17, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(17, out1.kadnnppostlocatievbohoofdadrnumaandhuisletter);
}

                    if(out1.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(18, out1.kadnnppostlocatievbohoofdadrnumaandhuisnumtoevoeg);
}

                    if(out1.kadnnppostlocatievbohoofdadrnumaandpostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(19, out1.kadnnppostlocatievbohoofdadrnumaandpostcode);
}

                    if(out1.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(20, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(20, out1.kadnnppostlocatievbohoofdadrnumaandgerelawplnaam);
}

                    if(out1.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(21, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(21, out1.kadnnppostlocatievbohoofdadrnumaandgeropenbareruimtenaam);
}

                    if(out1.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(22, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(22, out1.kadnnppostlocatievbohoofdadrnumaandoprgerrwoonplaatsnaam);
}

                    if(out1.kadnnppostlocatienevenadrhuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(23, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(23, out1.kadnnppostlocatienevenadrhuisnummer);
}

                    if(out1.kadnnppostlocatienevenadrhuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(24, out1.kadnnppostlocatienevenadrhuisletter);
}

                    if(out1.kadnnppostlocatienevenadrhuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(25, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(25, out1.kadnnppostlocatienevenadrhuisnumtoevoeg);
}

                    if(out1.kadnnppostlocatienevenadrpostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(26, out1.kadnnppostlocatienevenadrpostcode);
}

                    if(out1.kadnnppostlocatienevenadrgerwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(27, out1.kadnnppostlocatienevenadrgerwoonplaatsnaam);
}

                    if(out1.kadnnppostlocatienevenadrgeropenbareruimtenaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(28, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(28, out1.kadnnppostlocatienevenadrgeropenbareruimtenaam);
}

                    if(out1.kadnnppostlocatienevenadroprgerwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(29, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(29, out1.kadnnppostlocatienevenadroprgerwoonplaatsnaam);
}

                    if(out1.kadnnppostlocatiestandplaatsbagid == null) {
pstmt_tPostgresPlusOutput_1.setNull(30, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(30, out1.kadnnppostlocatiestandplaatsbagid);
}

                    if(out1.kadnnppostlocatiestandplaatshfdadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(31, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(31, out1.kadnnppostlocatiestandplaatshfdadreshuisnummer);
}

                    if(out1.kadnnppostlocatiestandplaatshfdadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(32, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(32, out1.kadnnppostlocatiestandplaatshfdadreshuisletter);
}

                    if(out1.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(33, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(33, out1.kadnnppostlocatiestandplaatshfdadreshuisnumtoevoeg);
}

                    if(out1.kadnnppostlocatiestandplaatshfdadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(34, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(34, out1.kadnnppostlocatiestandplaatshfdadrespostcode);
}

                    if(out1.kadnnppostlocatiestandplaatshfdadresgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(35, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(35, out1.kadnnppostlocatiestandplaatshfdadresgerwplnaam);
}

                    if(out1.kadnnppostlocatiestandplaatshfdadresgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(36, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(36, out1.kadnnppostlocatiestandplaatshfdadresgeroprnaam);
}

                    if(out1.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(37, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(37, out1.kadnnppostlocatiestandplaatshfdadresgoprerwoonplaatsnaam);
}

                    if(out1.kadnnppostlocatiestandplaatsnevadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(38, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(38, out1.kadnnppostlocatiestandplaatsnevadreshuisnummer);
}

                    if(out1.kadnnppostlocatiestandplaatsnevadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(39, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(39, out1.kadnnppostlocatiestandplaatsnevadreshuisletter);
}

                    if(out1.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(40, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(40, out1.kadnnppostlocatiestandplaatsnevadreshuisnumtoevoeg);
}

                    if(out1.kadnnppostlocatiestandplaatsnevadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(41, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(41, out1.kadnnppostlocatiestandplaatsnevadrespostcode);
}

                    if(out1.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(42, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(42, out1.kadnnppostlocatiestandplaatsnevadresgerwoonplaatsnaam);
}

                    if(out1.kadnnppostlocatiestandplaatsnevadresgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(43, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(43, out1.kadnnppostlocatiestandplaatsnevadresgeroprnaam);
}

                    if(out1.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(44, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(44, out1.kadnnppostlocatiestandplaatsnevadresoprgerwplnaam);
}

                    if(out1.kadnnppostlocatieligplaatshfdadresbagid == null) {
pstmt_tPostgresPlusOutput_1.setNull(45, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(45, out1.kadnnppostlocatieligplaatshfdadresbagid);
}

                    if(out1.kadnnppostlocatieligplaatshfdadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(46, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(46, out1.kadnnppostlocatieligplaatshfdadreshuisnummer);
}

                    if(out1.kadnnppostlocatieligplaatshfdadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(47, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(47, out1.kadnnppostlocatieligplaatshfdadreshuisletter);
}

                    if(out1.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(48, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(48, out1.kadnnppostlocatieligplaatshfdadreshuisnumtoevoeg);
}

                    if(out1.kadnnppostlocatieligplaatshfdadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(49, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(49, out1.kadnnppostlocatieligplaatshfdadrespostcode);
}

                    if(out1.kadnnppostlocatieligplaatshfdadreswplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(50, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(50, out1.kadnnppostlocatieligplaatshfdadreswplnaam);
}

                    if(out1.kadnnppostlocatieligplaatshfdadresgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(51, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(51, out1.kadnnppostlocatieligplaatshfdadresgeroprnaam);
}

                    if(out1.kadnnppostlocatieligplaatshfdadresoprgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(52, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(52, out1.kadnnppostlocatieligplaatshfdadresoprgerwplnaam);
}

                    if(out1.kadnnppostlocatieligplaatsnevadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(53, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(53, out1.kadnnppostlocatieligplaatsnevadreshuisnummer);
}

                    if(out1.kadnnppostlocatieligplaatsnevadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(54, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(54, out1.kadnnppostlocatieligplaatsnevadreshuisletter);
}

                    if(out1.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(55, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(55, out1.kadnnppostlocatieligplaatsnevadreshuisnumtoevoeg);
}

                    if(out1.kadnnppostlocatieligplaatsnevadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(56, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(56, out1.kadnnppostlocatieligplaatsnevadrespostcode);
}

                    if(out1.kadnnppostlocatieligplaatsnevadresgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(57, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(57, out1.kadnnppostlocatieligplaatsnevadresgerwplnaam);
}

                    if(out1.kadnnppostlocatieligplaatsnevadresgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(58, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(58, out1.kadnnppostlocatieligplaatsnevadresgeroprnaam);
}

                    if(out1.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(59, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(59, out1.kadnnppostlocatieligplaatsnevadresoprgerwoonplaatsnaam);
}

                    if(out1.kadnnppostlocatiekadbuitenlandsadres == null) {
pstmt_tPostgresPlusOutput_1.setNull(60, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(60, out1.kadnnppostlocatiekadbuitenlandsadres);
}

                    if(out1.kadnnppostlocatiekadbuitenlandsadreswoonplaats == null) {
pstmt_tPostgresPlusOutput_1.setNull(61, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(61, out1.kadnnppostlocatiekadbuitenlandsadreswoonplaats);
}

                    if(out1.kadnnppostlocatiekadbuitenlandsadresregio == null) {
pstmt_tPostgresPlusOutput_1.setNull(62, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(62, out1.kadnnppostlocatiekadbuitenlandsadresregio);
}

                    if(out1.kadnnppostlocatiekadbuitenlandsadresland == null) {
pstmt_tPostgresPlusOutput_1.setNull(63, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(63, out1.kadnnppostlocatiekadbuitenlandsadresland);
}

                    if(out1.kadnnppostlocatiebuitenlandsadres == null) {
pstmt_tPostgresPlusOutput_1.setNull(64, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(64, out1.kadnnppostlocatiebuitenlandsadres);
}

                    if(out1.kadnnppostlocatiebuitenlandsadreswoonplaats == null) {
pstmt_tPostgresPlusOutput_1.setNull(65, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(65, out1.kadnnppostlocatiebuitenlandsadreswoonplaats);
}

                    if(out1.kadnnppostlocatiebuitenlandsadresregio == null) {
pstmt_tPostgresPlusOutput_1.setNull(66, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(66, out1.kadnnppostlocatiebuitenlandsadresregio);
}

                    if(out1.kadnnppostlocatiebuitenlandsadreslandcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(67, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(67, out1.kadnnppostlocatiebuitenlandsadreslandcode);
}

                    if(out1.kadnnppostlocatiebuitenlandsadreslandwaarde == null) {
pstmt_tPostgresPlusOutput_1.setNull(68, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(68, out1.kadnnppostlocatiebuitenlandsadreslandwaarde);
}

                    if(out1.kadnnppostlocatiepostbusadrespostbusnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(69, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(69, out1.kadnnppostlocatiepostbusadrespostbusnummer);
}

                    if(out1.kadnnppostlocatiepostbusadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(70, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(70, out1.kadnnppostlocatiepostbusadrespostcode);
}

                    if(out1.kadnnppostlocatiepostbusadreswoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(71, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(71, out1.kadnnppostlocatiepostbusadreswoonplaatsnaam);
}

                    if(out1.kadnnpwoonlocatiebuitladres == null) {
pstmt_tPostgresPlusOutput_1.setNull(72, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(72, out1.kadnnpwoonlocatiebuitladres);
}

                    if(out1.kadnnpwoonlocatiebuitladreswoonplaats == null) {
pstmt_tPostgresPlusOutput_1.setNull(73, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(73, out1.kadnnpwoonlocatiebuitladreswoonplaats);
}

                    if(out1.kadnnpwoonlocatiebuitladresregio == null) {
pstmt_tPostgresPlusOutput_1.setNull(74, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(74, out1.kadnnpwoonlocatiebuitladresregio);
}

                    if(out1.kadnnpwoonlocatiebuitladreslandcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(75, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(75, out1.kadnnpwoonlocatiebuitladreslandcode);
}

                    if(out1.kadnnpwoonlocatiebuitladreslandwaarde == null) {
pstmt_tPostgresPlusOutput_1.setNull(76, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(76, out1.kadnnpwoonlocatiebuitladreslandwaarde);
}

                    if(out1.kadnnpwoonlocatiekadbuitladres == null) {
pstmt_tPostgresPlusOutput_1.setNull(77, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(77, out1.kadnnpwoonlocatiekadbuitladres);
}

                    if(out1.kadnnpwoonlocatiekadbuitladreswoonplaats == null) {
pstmt_tPostgresPlusOutput_1.setNull(78, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(78, out1.kadnnpwoonlocatiekadbuitladreswoonplaats);
}

                    if(out1.kadnnpwoonlocatiekadbuitladresregio == null) {
pstmt_tPostgresPlusOutput_1.setNull(79, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(79, out1.kadnnpwoonlocatiekadbuitladresregio);
}

                    if(out1.kadnnpwoonlocatiekadbuitladresland == null) {
pstmt_tPostgresPlusOutput_1.setNull(80, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(80, out1.kadnnpwoonlocatiekadbuitladresland);
}

                    if(out1.kadnnpwoonlocatieligplaatsbagid == null) {
pstmt_tPostgresPlusOutput_1.setNull(81, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(81, out1.kadnnpwoonlocatieligplaatsbagid);
}

                    if(out1.kadnnpwoonlocatieligplaatshfdadrhuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(82, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(82, out1.kadnnpwoonlocatieligplaatshfdadrhuisnummer);
}

                    if(out1.kadnnpwoonlocatieligplaatshfdadrhuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(83, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(83, out1.kadnnpwoonlocatieligplaatshfdadrhuisletter);
}

                    if(out1.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(84, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(84, out1.kadnnpwoonlocatieligplaatshfdadrhuisnumoevoeg);
}

                    if(out1.kadnnpwoonlocatieligplaatshfdadrpostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(85, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(85, out1.kadnnpwoonlocatieligplaatshfdadrpostcode);
}

                    if(out1.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(86, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(86, out1.kadnnpwoonlocatieligplaatshfdadrgerwoonplaatsnaam);
}

                    if(out1.kadnnpwoonlocatieligplaatshfdadrgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(87, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(87, out1.kadnnpwoonlocatieligplaatshfdadrgeroprnaam);
}

                    if(out1.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(88, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(88, out1.kadnnpwoonlocatieligplaatshfdadroprgewoonplaatsnaam);
}

                    if(out1.kadnnpwoonlocatieligplaatsnevadrhuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(89, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(89, out1.kadnnpwoonlocatieligplaatsnevadrhuisnummer);
}

                    if(out1.kadnnpwoonlocatieligplaatsnevadrhuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(90, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(90, out1.kadnnpwoonlocatieligplaatsnevadrhuisletter);
}

                    if(out1.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(91, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(91, out1.kadnnpwoonlocatieligplaatsnevadrhuisnumtoevoeg);
}

                    if(out1.kadnnpwoonlocatieligplaatsnevadrpostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(92, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(92, out1.kadnnpwoonlocatieligplaatsnevadrpostcode);
}

                    if(out1.kadnnpwoonlocatieligplaatsnevadrgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(93, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(93, out1.kadnnpwoonlocatieligplaatsnevadrgerwplnaam);
}

                    if(out1.kadnnpwoonlocatieligplaatsnevadroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(94, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(94, out1.kadnnpwoonlocatieligplaatsnevadroprnaam);
}

                    if(out1.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(95, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(95, out1.kadnnpwoonlocatieligplaatsnevadroprgerwplnaam);
}

                    if(out1.kadnnpwoonlocatiestandplaatsbagid == null) {
pstmt_tPostgresPlusOutput_1.setNull(96, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(96, out1.kadnnpwoonlocatiestandplaatsbagid);
}

                    if(out1.kadnnpwoonlocatiestandplaatshfdadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(97, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(97, out1.kadnnpwoonlocatiestandplaatshfdadreshuisnummer);
}

                    if(out1.kadnnpwoonlocatiestandplaatshfdadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(98, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(98, out1.kadnnpwoonlocatiestandplaatshfdadreshuisletter);
}

                    if(out1.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(99, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(99, out1.kadnnpwoonlocatiestandplaatshfdadreshuisnumtoevoeg);
}

                    if(out1.kadnnpwoonlocatiestandplaatshfdadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(100, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(100, out1.kadnnpwoonlocatiestandplaatshfdadrespostcode);
}

                    if(out1.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(101, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(101, out1.kadnnpwoonlocatiestandplaatshfdadresgerwplnaam);
}

                    if(out1.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(102, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(102, out1.kadnnpwoonlocatiestandplaatshfdadresgeroprnaam);
}

                    if(out1.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(103, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(103, out1.kadnnpwoonlocatiestandplaatshfdadresoprgerwplnaam);
}

                    if(out1.kadnnpwoonlocatiestandplaatsnevadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(104, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(104, out1.kadnnpwoonlocatiestandplaatsnevadreshuisnummer);
}

                    if(out1.kadnnpwoonlocatiestandplaatsnevadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(105, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(105, out1.kadnnpwoonlocatiestandplaatsnevadreshuisletter);
}

                    if(out1.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(106, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(106, out1.kadnnpwoonlocatiestandplaatsnevadreshuisnumtoevoeg);
}

                    if(out1.kadnnpwoonlocatiestandplaatsnevadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(107, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(107, out1.kadnnpwoonlocatiestandplaatsnevadrespostcode);
}

                    if(out1.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(108, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(108, out1.kadnnpwoonlocatiestandplaatsnevadresgerwplnaam);
}

                    if(out1.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(109, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(109, out1.kadnnpwoonlocatiestandplaatsnevadresgeroprnaam);
}

                    if(out1.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(110, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(110, out1.kadnnpwoonlocatiestandplaatsnevadresoprgerwplnaam);
}

                    if(out1.kadnnpwoonlocatievbobagid == null) {
pstmt_tPostgresPlusOutput_1.setNull(111, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(111, out1.kadnnpwoonlocatievbobagid);
}

                    if(out1.kadnnpwoonlocatievbohfdadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(112, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(112, out1.kadnnpwoonlocatievbohfdadreshuisnummer);
}

                    if(out1.kadnnpwoonlocatievbohfdadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(113, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(113, out1.kadnnpwoonlocatievbohfdadreshuisletter);
}

                    if(out1.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(114, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(114, out1.kadnnpwoonlocatievbohfdadreshuisnumtoevoeg);
}

                    if(out1.kadnnpwoonlocatievbohfdadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(115, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(115, out1.kadnnpwoonlocatievbohfdadrespostcode);
}

                    if(out1.kadnnpwoonlocatievbohfdadreswplaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(116, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(116, out1.kadnnpwoonlocatievbohfdadreswplaam);
}

                    if(out1.kadnnpwoonlocatievbohfdadresoprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(117, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(117, out1.kadnnpwoonlocatievbohfdadresoprnaam);
}

                    if(out1.kadnnpwoonlocatievbohfdadresoprgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(118, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(118, out1.kadnnpwoonlocatievbohfdadresoprgerwplnaam);
}

                    if(out1.kadnnpwoonlocatievbonevadreshuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(119, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(119, out1.kadnnpwoonlocatievbonevadreshuisnummer);
}

                    if(out1.kadnnpwoonlocatievbonevadreshuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(120, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(120, out1.kadnnpwoonlocatievbonevadreshuisletter);
}

                    if(out1.kadnnpwoonlocatievbonevadreshuisnumoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(121, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(121, out1.kadnnpwoonlocatievbonevadreshuisnumoevoeg);
}

                    if(out1.kadnnpwoonlocatievbonevadrespostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(122, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(122, out1.kadnnpwoonlocatievbonevadrespostcode);
}

                    if(out1.kadnnpwoonlocatievbonevadresgerwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(123, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(123, out1.kadnnpwoonlocatievbonevadresgerwplnaam);
}

                    if(out1.kadnnpwoonlocatievbonevadresgeroprnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(124, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(124, out1.kadnnpwoonlocatievbonevadresgeroprnaam);
}

                    if(out1.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(125, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(125, out1.kadnnpwoonlocatievbonevadresgeroprwoonplaatsnaam);
}

                    if(out1.kadnnpwoonlocatiekadbinadropenbareruimtenaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(126, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(126, out1.kadnnpwoonlocatiekadbinadropenbareruimtenaam);
}

                    if(out1.kadnnpwoonlocatiekadbinadrhuisletter == null) {
pstmt_tPostgresPlusOutput_1.setNull(127, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(127, out1.kadnnpwoonlocatiekadbinadrhuisletter);
}

                    if(out1.kadnnpwoonlocatiekadbinadrhuisnummer == null) {
pstmt_tPostgresPlusOutput_1.setNull(128, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(128, out1.kadnnpwoonlocatiekadbinadrhuisnummer);
}

                    if(out1.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg == null) {
pstmt_tPostgresPlusOutput_1.setNull(129, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(129, out1.kadnnpwoonlocatiekadbinadrhuisnumtoevoeg);
}

                    if(out1.kadnnpwoonlocatiekadbinadrpostcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(130, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(130, out1.kadnnpwoonlocatiekadbinadrpostcode);
}

                    if(out1.kadnnpwoonlocatiekadbinadrwplnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(131, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(131, out1.kadnnpwoonlocatiekadbinadrwplnaam);
}

                    if(out1.kadnnpnaam == null) {
pstmt_tPostgresPlusOutput_1.setNull(132, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(132, out1.kadnnpnaam);
}

                    if(out1.kadnnprechtsvormcode == null) {
pstmt_tPostgresPlusOutput_1.setNull(133, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(133, out1.kadnnprechtsvormcode);
}

                    if(out1.kadnnprechtsvormwaarde == null) {
pstmt_tPostgresPlusOutput_1.setNull(134, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(134, out1.kadnnprechtsvormwaarde);
}

                    if(out1.kadnnpstatutairezetel == null) {
pstmt_tPostgresPlusOutput_1.setNull(135, java.sql.Types.VARCHAR);
} else {pstmt_tPostgresPlusOutput_1.setString(135, out1.kadnnpstatutairezetel);
}


                       try {
                           insertedCount_tPostgresPlusOutput_1 = insertedCount_tPostgresPlusOutput_1 + pstmt_tPostgresPlusOutput_1.executeUpdate();
                           nb_line_tPostgresPlusOutput_1++;
                       } catch(java.lang.Exception e) {
                           whetherReject_tPostgresPlusOutput_1 = true;
                               throw(e);
                       }
            if(!whetherReject_tPostgresPlusOutput_1) {
            }

 


	tos_count_tPostgresPlusOutput_1++;

/**
 * [tPostgresPlusOutput_1 main ] stop
 */
	
	/**
	 * [tPostgresPlusOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostgresPlusOutput_1";

	

 



/**
 * [tPostgresPlusOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostgresPlusOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostgresPlusOutput_1";

	

 



/**
 * [tPostgresPlusOutput_1 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tXMLMap_3_TXMLMAP_IN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_IN";

	

 



/**
 * [tXMLMap_3_TXMLMAP_IN process_data_end ] stop
 */
	
	/**
	 * [tXMLMap_3_TXMLMAP_IN end ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_IN";

	

}//TD512
 

ok_Hash.put("tXMLMap_3_TXMLMAP_IN", true);
end_Hash.put("tXMLMap_3_TXMLMAP_IN", System.currentTimeMillis());




/**
 * [tXMLMap_3_TXMLMAP_IN end ] stop
 */

	
	/**
	 * [tPostgresPlusOutput_1 end ] start
	 */

	

	
	
	currentComponent="tPostgresPlusOutput_1";

	



        if(pstmt_tPostgresPlusOutput_1 != null) {
            pstmt_tPostgresPlusOutput_1.close();
            resourceMap.remove("pstmt_tPostgresPlusOutput_1");
        }
    resourceMap.put("statementClosed_tPostgresPlusOutput_1", true);

	nb_line_deleted_tPostgresPlusOutput_1=nb_line_deleted_tPostgresPlusOutput_1+ deletedCount_tPostgresPlusOutput_1;
	nb_line_update_tPostgresPlusOutput_1=nb_line_update_tPostgresPlusOutput_1 + updatedCount_tPostgresPlusOutput_1;
	nb_line_inserted_tPostgresPlusOutput_1=nb_line_inserted_tPostgresPlusOutput_1 + insertedCount_tPostgresPlusOutput_1;
	nb_line_rejected_tPostgresPlusOutput_1=nb_line_rejected_tPostgresPlusOutput_1 + rejectedCount_tPostgresPlusOutput_1;
	
        globalMap.put("tPostgresPlusOutput_1_NB_LINE",nb_line_tPostgresPlusOutput_1);
        globalMap.put("tPostgresPlusOutput_1_NB_LINE_UPDATED",nb_line_update_tPostgresPlusOutput_1);
        globalMap.put("tPostgresPlusOutput_1_NB_LINE_INSERTED",nb_line_inserted_tPostgresPlusOutput_1);
        globalMap.put("tPostgresPlusOutput_1_NB_LINE_DELETED",nb_line_deleted_tPostgresPlusOutput_1);
        globalMap.put("tPostgresPlusOutput_1_NB_LINE_REJECTED", nb_line_rejected_tPostgresPlusOutput_1);
    
	

			
			if(execStat){
				if(resourceMap.get("inIterateVComp") == null || !((Boolean)resourceMap.get("inIterateVComp"))){
	 				runStat.updateStatOnConnection("out1"+iterateId,2, 0);
			 	}
			}
			
			
			
		
 

ok_Hash.put("tPostgresPlusOutput_1", true);
end_Hash.put("tPostgresPlusOutput_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tPostgresPlusOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputXML_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tPostgresPlusRow_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";

	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tXMLMap_3_TXMLMAP_OUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_OUT";

	

 



/**
 * [tXMLMap_3_TXMLMAP_OUT finally ] stop
 */

	
	/**
	 * [tXMLMap_3_TXMLMAP_IN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tXMLMap_3";
	
	currentComponent="tXMLMap_3_TXMLMAP_IN";

	

 



/**
 * [tXMLMap_3_TXMLMAP_IN finally ] stop
 */

	
	/**
	 * [tPostgresPlusOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tPostgresPlusOutput_1";

	



    if (resourceMap.get("statementClosed_tPostgresPlusOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tPostgresPlusOutput_1 = null;
                if ((pstmtToClose_tPostgresPlusOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tPostgresPlusOutput_1")) != null) {
                    pstmtToClose_tPostgresPlusOutput_1.close();
                }
    }
 



/**
 * [tPostgresPlusOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	

public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";

	
		int tos_count_tJava_1 = 0;
		


context.result = true;
context.jobName = "brk_kadnnp_job";
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tRunJob_1Process(globalMap);



/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";

	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	

public void tRunJob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRunJob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";

	
		int tos_count_tRunJob_1 = 0;
		


 



/**
 * [tRunJob_1 begin ] stop
 */
	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";

	
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
	        			paraList_tRunJob_1.add("--father_pid="+pid);
	      			
	        			paraList_tRunJob_1.add("--root_pid="+rootPid);
	      			
	        			paraList_tRunJob_1.add("--father_node=tRunJob_1");
	      			
	        			paraList_tRunJob_1.add("--context=Default");
	      			
		if(enableLogStash){
			paraList_tRunJob_1.add("--monitoring="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + portStats);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	
		
		context.synchronizeContext();
            class ContextProcessor_tRunJob_1 {
                    private void transmitContext_0() {
                    parentContextMap_tRunJob_1.put("xmlLocation", context.xmlLocation);
                    paraList_tRunJob_1.add("--context_type " + "xmlLocation" + "=" + "id_String");
                    parentContextMap_tRunJob_1.put("xmlType", context.xmlType);
                    paraList_tRunJob_1.add("--context_type " + "xmlType" + "=" + "id_String");
                    parentContextMap_tRunJob_1.put("jobName", context.jobName);
                    paraList_tRunJob_1.add("--context_type " + "jobName" + "=" + "id_String");
                    parentContextMap_tRunJob_1.put("result", context.result);
                    paraList_tRunJob_1.add("--context_type " + "result" + "=" + "id_Boolean");
                        }
                    public void transmitAllContext() {
                        transmitContext_0();
                    }
            }
            new ContextProcessor_tRunJob_1().transmitAllContext();
		java.util.Enumeration<?> propertyNames_tRunJob_1 = context.propertyNames();
		while (propertyNames_tRunJob_1.hasMoreElements()) {
			String key_tRunJob_1 = (String) propertyNames_tRunJob_1.nextElement();
			Object value_tRunJob_1 = (Object) context.get(key_tRunJob_1);
			if(value_tRunJob_1!=null) {  
				paraList_tRunJob_1.add("--context_param " + key_tRunJob_1 + "=" + value_tRunJob_1);
			} else {
				paraList_tRunJob_1.add("--context_param " + key_tRunJob_1 + "=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
			}
			
		}
		

	Object obj_tRunJob_1 = null;

	
	
		brk.joblogger_0_1.JobLogger childJob_tRunJob_1 = new brk.joblogger_0_1.JobLogger();
	    // pass DataSources
	    java.util.Map<String, routines.system.TalendDataSource> talendDataSources_tRunJob_1 = (java.util.Map<String, routines.system.TalendDataSource>) globalMap
	            .get(KEY_DB_DATASOURCES);
	    if (null != talendDataSources_tRunJob_1) {
	        java.util.Map<String, javax.sql.DataSource> dataSources_tRunJob_1 = new java.util.HashMap<String, javax.sql.DataSource>();
	        for (java.util.Map.Entry<String, routines.system.TalendDataSource> talendDataSourceEntry_tRunJob_1 : talendDataSources_tRunJob_1
			        .entrySet()) {
	            dataSources_tRunJob_1.put(talendDataSourceEntry_tRunJob_1.getKey(),
	                    talendDataSourceEntry_tRunJob_1.getValue().getRawDataSource());
	        }
	        childJob_tRunJob_1.setDataSources(dataSources_tRunJob_1);
	    }
		  
			childJob_tRunJob_1.parentContextMap = parentContextMap_tRunJob_1;
		  
		
		String[][] childReturn_tRunJob_1 = childJob_tRunJob_1.runJob((String[]) paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));
		
	  	
				errorCode = childJob_tRunJob_1.getErrorCode();
		    
	            
	    	if(childJob_tRunJob_1.getErrorCode() == null){
				globalMap.put("tRunJob_1_CHILD_RETURN_CODE", childJob_tRunJob_1.getStatus() != null && ("failure").equals(childJob_tRunJob_1.getStatus()) ? 1 : 0);
	    	}else{
				globalMap.put("tRunJob_1_CHILD_RETURN_CODE", childJob_tRunJob_1.getErrorCode());
		    }
		    if (childJob_tRunJob_1.getExceptionStackTrace() != null) { 
		    	globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE", childJob_tRunJob_1.getExceptionStackTrace());
		    }
	  
			 
				if (childJob_tRunJob_1.getErrorCode() != null || ("failure").equals(childJob_tRunJob_1.getStatus())) {
					java.lang.Exception ce_tRunJob_1 = childJob_tRunJob_1.getException();
					throw new RuntimeException("Child job running failed.\n" + ((ce_tRunJob_1!=null) ? (ce_tRunJob_1.getClass().getName() + ": " + ce_tRunJob_1.getMessage()) : ""));
				}
			
	  	

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";

	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";

	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */
	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";

	

 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";

	

 



/**
 * [tRunJob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRunJob_1_SUBPROCESS_STATE", 1);
	}
	

public void tPostgresPlusRow_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostgresPlusRow_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tPostgresPlusRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostgresPlusRow_1", false);
		start_Hash.put("tPostgresPlusRow_1", System.currentTimeMillis());
		
	
	currentComponent="tPostgresPlusRow_1";

	
		int tos_count_tPostgresPlusRow_1 = 0;
		

	java.sql.Connection conn_tPostgresPlusRow_1 = null;
	String query_tPostgresPlusRow_1 = "";
	boolean whetherReject_tPostgresPlusRow_1 = false;
				conn_tPostgresPlusRow_1 = (java.sql.Connection)globalMap.get("conn_tPostgresPlusConnection_1");
			
    resourceMap.put("conn_tPostgresPlusRow_1", conn_tPostgresPlusRow_1);
        java.sql.Statement stmt_tPostgresPlusRow_1 = conn_tPostgresPlusRow_1.createStatement();
        resourceMap.put("stmt_tPostgresPlusRow_1", stmt_tPostgresPlusRow_1);

 



/**
 * [tPostgresPlusRow_1 begin ] stop
 */
	
	/**
	 * [tPostgresPlusRow_1 main ] start
	 */

	

	
	
	currentComponent="tPostgresPlusRow_1";

	

query_tPostgresPlusRow_1 = "COMMENT ON TABLE brk_kadnnp IS 'Kadastraal bedrijf';\nCOMMENT ON COLUMN brk_kadnnp.kadnnpnaam IS 'Naam';\nCOMMENT ON CO"
+"LUMN brk_kadnnp.kadnnprechtsvormwaarde IS 'Rechtsvorm';";
whetherReject_tPostgresPlusRow_1 = false;
globalMap.put("tPostgresPlusRow_1_QUERY",query_tPostgresPlusRow_1);
try {
		stmt_tPostgresPlusRow_1.execute(query_tPostgresPlusRow_1);
		
	} catch (java.lang.Exception e) {
		whetherReject_tPostgresPlusRow_1 = true;
		
				System.err.print(e.getMessage());
				
	}
	

 


	tos_count_tPostgresPlusRow_1++;

/**
 * [tPostgresPlusRow_1 main ] stop
 */
	
	/**
	 * [tPostgresPlusRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostgresPlusRow_1";

	

 



/**
 * [tPostgresPlusRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostgresPlusRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostgresPlusRow_1";

	

 



/**
 * [tPostgresPlusRow_1 process_data_end ] stop
 */
	
	/**
	 * [tPostgresPlusRow_1 end ] start
	 */

	

	
	
	currentComponent="tPostgresPlusRow_1";

	

	
        stmt_tPostgresPlusRow_1.close();
        resourceMap.remove("stmt_tPostgresPlusRow_1");
    resourceMap.put("statementClosed_tPostgresPlusRow_1", true);
    resourceMap.put("finish_tPostgresPlusRow_1", true);
 

ok_Hash.put("tPostgresPlusRow_1", true);
end_Hash.put("tPostgresPlusRow_1", System.currentTimeMillis());




/**
 * [tPostgresPlusRow_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostgresPlusRow_1 finally ] start
	 */

	

	
	
	currentComponent="tPostgresPlusRow_1";

	

    if (resourceMap.get("statementClosed_tPostgresPlusRow_1") == null) {
            java.sql.Statement stmtToClose_tPostgresPlusRow_1 = null;
            if ((stmtToClose_tPostgresPlusRow_1 = (java.sql.Statement) resourceMap.remove("stmt_tPostgresPlusRow_1")) != null) {
                stmtToClose_tPostgresPlusRow_1.close();
            }
    }
 



/**
 * [tPostgresPlusRow_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostgresPlusRow_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    private PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    

    public static void main(String[] args){
        final brk_kadnnp_init brk_kadnnp_initClass = new brk_kadnnp_init();

        int exitCode = brk_kadnnp_initClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = brk_kadnnp_init.class.getClassLoader().getResourceAsStream("brk/brk_kadnnp_init_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = brk_kadnnp_init.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                //defaultProps is in order to keep the original context value
                if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                }
                
                inContext.close();
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("xmlLocation", "id_String");
                            context.xmlLocation=(String) context.getProperty("xmlLocation");
                        context.setContextType("xmlType", "id_String");
                            context.xmlType=(String) context.getProperty("xmlType");
                        context.setContextType("jobName", "id_String");
                            context.jobName=(String) context.getProperty("jobName");
                        context.setContextType("result", "id_Boolean");
                            try{
                                context.result=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("result"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "result", e.getMessage()));
                                context.result=null;
                            }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("xmlLocation")) {
                context.xmlLocation = (String) parentContextMap.get("xmlLocation");
            }if (parentContextMap.containsKey("xmlType")) {
                context.xmlType = (String) parentContextMap.get("xmlType");
            }if (parentContextMap.containsKey("jobName")) {
                context.jobName = (String) parentContextMap.get("jobName");
            }if (parentContextMap.containsKey("result")) {
                context.result = (Boolean) parentContextMap.get("result");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();




this.globalResumeTicket = true;//to run tPreJob




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tWarn_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tWarn_1) {
globalMap.put("tWarn_1_SUBPROCESS_STATE", -1);

e_tWarn_1.printStackTrace();

}
try {
errorCode = null;tPostgresPlusConnection_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostgresPlusConnection_1) {
globalMap.put("tPostgresPlusConnection_1_SUBPROCESS_STATE", -1);

e_tPostgresPlusConnection_1.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : brk_kadnnp_init");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;
    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tPostgresPlusConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tPostgresPlusConnection_1", globalMap.get("conn_tPostgresPlusConnection_1"));







        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring=")) {//for trunjob call
			enableLogStash = "true".equalsIgnoreCase(arg.substring(13));
		}
		
		if(!enableLogStash) {
			enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     309992 characters generated by Talend Open Studio for Data Integration 
 *     on the 10 mei 2020 14:29:41 CEST
 ************************************************************************************************/